<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sanstyle</title>
  <subtitle>功有所不全 才有所不任 力有所不足</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-12-05T03:56:07.941Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>MC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>java读写文件二</title>
    <link href="http://yoursite.com/2017/12/05/java%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E4%BA%8C/"/>
    <id>http://yoursite.com/2017/12/05/java读写文件二/</id>
    <published>2017-12-05T03:54:42.000Z</published>
    <updated>2017-12-05T03:56:07.941Z</updated>
    
    <content type="html"><![CDATA[<p>使用Java的输入流、输出流将一个文本文件的内容按行读出，每读出一行就顺序添加行号，并写入到另一个文件中。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.<span class="keyword">BufferedReader</span>;  </div><div class="line"><span class="keyword">import</span> java.io.BufferedWriter;  </div><div class="line"><span class="keyword">import</span> java.io.FileNotFoundException;  </div><div class="line"><span class="keyword">import</span> java.io.FileReader;  </div><div class="line"><span class="keyword">import</span> java.io.FileWriter;  </div><div class="line"><span class="keyword">import</span> java.io.IOException;  </div><div class="line">  </div><div class="line"><span class="keyword">public</span> class Test4 &#123;  </div><div class="line">  </div><div class="line">    <span class="comment">/** </span></div><div class="line"><span class="comment">     * @param args </span></div><div class="line"><span class="comment">     */</span>  </div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;  </div><div class="line">        <span class="comment">// TODO Auto-generated method stub  </span></div><div class="line">        <span class="keyword">BufferedReader</span> br = <span class="keyword">null</span>;  </div><div class="line">        BufferedWriter bw = <span class="keyword">null</span>;  </div><div class="line">        <span class="keyword">try</span> &#123;  </div><div class="line">            br = <span class="keyword">new</span> <span class="keyword">BufferedReader</span>(<span class="keyword">new</span> FileReader(<span class="string">"Input.txt"</span>));  </div><div class="line">            bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="string">"Output.txt"</span>));  </div><div class="line">            <span class="keyword">String</span> <span class="built_in">str</span> = <span class="string">""</span>;  </div><div class="line">            <span class="built_in">int</span> i = <span class="number">1</span>;  </div><div class="line">            <span class="keyword">while</span>((<span class="built_in">str</span> = br.readLine()) != <span class="keyword">null</span>)&#123;  </div><div class="line">                bw.write(i+<span class="string">" "</span>);  </div><div class="line">                bw.write(<span class="built_in">str</span>);  </div><div class="line">                System.out.<span class="built_in">println</span>(i+ <span class="string">" "</span>+ <span class="built_in">str</span>);  </div><div class="line">                bw.newLine();  <span class="comment">//换行，换行后可以使用readline()来一行行读取数据</span></div><div class="line">                i++;  </div><div class="line">            &#125;  </div><div class="line">            bw.flush();  </div><div class="line">            <span class="comment">//清空缓冲区的数据流，进行流的操作时，数据先被读到内存中，然后再用数据写到文件中，</span></div><div class="line">            <span class="comment">//当数据读完时，如果调用close()方法关闭读写流，就可能造成数据丢失，</span></div><div class="line">            <span class="comment">//原因是一部分的数据可能留在缓存区</span></div><div class="line">            bw.close();  </div><div class="line">            br.close();  </div><div class="line">              </div><div class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;  </div><div class="line">            <span class="comment">// TODO Auto-generated catch block  </span></div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"找不到指定文件！"</span>);  </div><div class="line">        &#125;<span class="keyword">catch</span> (IOException e) &#123;  </div><div class="line">            <span class="comment">// TODO Auto-generated catch block  </span></div><div class="line">            e.printStackTrace();  </div><div class="line">        &#125;  </div><div class="line">    &#125;  </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用Java的输入流、输出流将一个文本文件的内容按行读出，每读出一行就顺序添加行号，并写入到另一个文件中。&lt;br&gt;&lt;figure class=&quot;highlight processing&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div cla
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>java读写文件一</title>
    <link href="http://yoursite.com/2017/12/05/java%E8%AF%BB%E5%86%99%E6%96%87%E4%BB%B6%E4%B8%80/"/>
    <id>http://yoursite.com/2017/12/05/java读写文件一/</id>
    <published>2017-12-05T03:27:31.000Z</published>
    <updated>2017-12-05T03:56:38.060Z</updated>
    
    <content type="html"><![CDATA[<p><code>写入文件后可逆序输出</code><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.*;</div><div class="line"><span class="keyword">import</span> java.util.Scanner;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Test3 &#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</div><div class="line">		<span class="comment">//创建文件对象</span></div><div class="line">		<span class="keyword">File</span> <span class="keyword">file</span>= <span class="keyword">new</span> <span class="keyword">File</span>(<span class="string">"2.txt"</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">if</span> (<span class="keyword">file</span>.exists()) &#123;</div><div class="line">			<span class="comment">//文件存在</span></div><div class="line">			String name= <span class="keyword">file</span>.getName();</div><div class="line">			<span class="keyword">long</span> len= <span class="keyword">file</span>.length();</div><div class="line">			<span class="comment">//判断文件隐藏属性</span></div><div class="line">			<span class="keyword">boolean</span> hidden= <span class="keyword">file</span>.isHidden();</div><div class="line">			System.out.<span class="keyword">println</span>(<span class="string">"文件名称: "</span>+ name+ <span class="string">"\n文件长度: "</span>+ len+ <span class="string">"\n隐藏属性: "</span>+ hidden);</div><div class="line">			writefile(<span class="keyword">file</span>);</div><div class="line">			readfile(<span class="keyword">file</span>);</div><div class="line">		&#125;<span class="keyword">else</span> &#123;</div><div class="line">			<span class="comment">//文件不存在，创建文件</span></div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="keyword">file</span>.createNewFile();</div><div class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">				<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">				e.printStackTrace();</div><div class="line">			&#125;<span class="keyword">finally</span> &#123;</div><div class="line">				System.out.<span class="keyword">println</span>(<span class="string">"文件已创建"</span>);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> readfile(<span class="keyword">File</span> <span class="keyword">file</span>) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">		FileInputStream fileInputStream= <span class="keyword">new</span> FileInputStream(<span class="keyword">file</span>);</div><div class="line">		</div><div class="line">		<span class="keyword">byte</span>[] b= <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</div><div class="line">		</div><div class="line">		<span class="keyword">int</span> len= fileInputStream.<span class="keyword">read</span>(b);</div><div class="line">		fileInputStream.close();</div><div class="line">		StringBuilder ab = <span class="keyword">new</span> StringBuilder(<span class="keyword">new</span> String(b, <span class="number">0</span>, len));</div><div class="line">		</div><div class="line">		System.out.<span class="keyword">println</span>(<span class="string">"文件读出的内容是: \n"</span>+ ab.<span class="keyword">reverse</span>().toString());</div><div class="line">		&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">			<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> writefile(<span class="keyword">File</span> <span class="keyword">file</span>) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		Scanner in= <span class="keyword">new</span> Scanner(System.in);</div><div class="line">		System.out.<span class="keyword">println</span>(<span class="string">"请输入要写入得内容"</span>);</div><div class="line">		String string= in.<span class="keyword">next</span>();</div><div class="line">		</div><div class="line">		<span class="comment">//建立文件传输管道</span></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			FileOutputStream fileOutputStream= <span class="keyword">new</span> FileOutputStream(<span class="keyword">file</span>);</div><div class="line">			</div><div class="line">			<span class="comment">//写文件</span></div><div class="line">			fileOutputStream.<span class="keyword">write</span>(string.getBytes());</div><div class="line">			</div><div class="line">			<span class="comment">//关闭管道</span></div><div class="line">			fileOutputStream.close();</div><div class="line">			System.out.<span class="keyword">println</span>(<span class="string">"文件写入完成"</span>);</div><div class="line">		&#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</div><div class="line">			<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;<span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">			<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;写入文件后可逆序输出&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>UDP简单大文件传送</title>
    <link href="http://yoursite.com/2017/12/04/UDP%E7%AE%80%E5%8D%95%E5%A4%A7%E6%96%87%E4%BB%B6%E4%BC%A0%E9%80%81/"/>
    <id>http://yoursite.com/2017/12/04/UDP简单大文件传送/</id>
    <published>2017-12-04T12:40:03.000Z</published>
    <updated>2017-12-04T12:46:45.624Z</updated>
    
    <content type="html"><![CDATA[<p>话不多说，直接上代码。<br>运行的时候先运行<code>You.java</code>, 再运行<code>My.java</code><br><code>My.java</code><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.net.*;</div><div class="line"><span class="keyword">import</span> java.util.concurrent.TimeoutException;</div><div class="line"><span class="keyword">import</span> java.awt.event.*;</div><div class="line"><span class="keyword">import</span> java.io.<span class="keyword">File</span>;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.io.RandomAccessFile;</div><div class="line"><span class="keyword">import</span> javax.swing.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> My&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</div><div class="line">		<span class="keyword">new</span> MyFrame();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">class</span> MyFrame <span class="keyword">extends</span> JFrame <span class="keyword">implements</span>  ActionListener &#123;</div><div class="line">	JTextField out_message = <span class="keyword">new</span> JTextField(<span class="number">16</span>);</div><div class="line">	JTextArea in_message = <span class="keyword">new</span> JTextArea();</div><div class="line">	JButton cfile = <span class="keyword">new</span> JButton(<span class="string">"选择文件"</span>);</div><div class="line">	JFileChooser chooser = <span class="keyword">new</span> JFileChooser();</div><div class="line"></div><div class="line">	<span class="keyword">public</span> MyFrame() &#123;		</div><div class="line">		setTitle(<span class="string">"My"</span>);</div><div class="line">		<span class="comment">// setSize(600, 600);</span></div><div class="line">		setVisible(<span class="keyword">true</span>);</div><div class="line">		setBounds(<span class="number">300</span>, <span class="number">200</span>, <span class="number">350</span>, <span class="number">300</span>);</div><div class="line">		cfile.addActionListener(<span class="keyword">this</span>);</div><div class="line">		<span class="comment">// send.addActionListener(this);</span></div><div class="line">		<span class="comment">// out_message.addKeyListener(this);</span></div><div class="line">		JPanel pSouth = <span class="keyword">new</span> JPanel();</div><div class="line">		pSouth.add(out_message);</div><div class="line">		pSouth.add(cfile);</div><div class="line">		<span class="comment">// pSouth.add(send);</span></div><div class="line">		add(pSouth, <span class="string">"South"</span>);</div><div class="line">		add(<span class="keyword">new</span> JScrollPane(in_message), <span class="string">"Center"</span>);</div><div class="line">		validate();</div><div class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent event) &#123;</div><div class="line">		chooser.setFileSelectionMode(<span class="number">0</span>);</div><div class="line">		<span class="keyword">int</span> status = chooser.showOpenDialog(<span class="keyword">null</span>);</div><div class="line">		<span class="keyword">if</span> (status == <span class="number">1</span>) &#123;</div><div class="line">			<span class="keyword">return</span>;</div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">File</span> <span class="keyword">file</span> = chooser.getSelectedFile();</div><div class="line">			out_message.setText(<span class="keyword">file</span>.getAbsolutePath());</div><div class="line">			out_message.grabFocus();</div><div class="line">			<span class="keyword">long</span> startTime = System.currentTimeMillis();<span class="comment">// 获取当前时间</span></div><div class="line"></div><div class="line">			<span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[UDPUtils.BUFFER_SIZE];<span class="comment">// 发送文件的字节数组</span></div><div class="line">			<span class="keyword">byte</span>[] receiveBuf = <span class="keyword">new</span> <span class="keyword">byte</span>[Math.max(UDPUtils.successData.length, UDPUtils.exitData.length)];<span class="comment">// 传送验证信息的字节数组</span></div><div class="line"></div><div class="line">			RandomAccessFile accessFile = <span class="keyword">null</span>;</div><div class="line">			DatagramPacket dpk = <span class="keyword">null</span>;</div><div class="line">			DatagramSocket dsk = <span class="keyword">null</span>;</div><div class="line">			<span class="keyword">int</span> readSize = -<span class="number">1</span>;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				accessFile = <span class="keyword">new</span> RandomAccessFile(<span class="keyword">file</span>.getAbsolutePath(), <span class="string">"r"</span>);<span class="comment">// 创建一个只读的文件流</span></div><div class="line">				dpk = <span class="keyword">new</span> DatagramPacket(buf, buf.length,</div><div class="line">						<span class="keyword">new</span> InetSocketAddress(InetAddress.getByName(<span class="string">"192.168.199.143"</span>), UDPUtils.PORT + <span class="number">1</span>));<span class="comment">// 创建一个待发送数据包</span></div><div class="line">				dsk = <span class="keyword">new</span> DatagramSocket(UDPUtils.PORT);<span class="comment">// 接收....</span></div><div class="line">				dsk.setSoTimeout(<span class="number">1000</span>);<span class="comment">// 设置确认报文超时重传</span></div><div class="line">				<span class="keyword">int</span> sendCount = <span class="number">0</span>;<span class="comment">// 记录发送的数据包的数量</span></div><div class="line">				<span class="keyword">while</span> ((readSize = accessFile.<span class="keyword">read</span>(buf, <span class="number">0</span>, buf.length)) != -<span class="number">1</span>) &#123;<span class="comment">// 将文件的数据读满字节数组，返回读入数组的总字节数，如果到文件尾则等于-1</span></div><div class="line">					<span class="comment">// 未读到文件尾</span></div><div class="line">					dpk.setData(buf, <span class="number">0</span>, readSize);<span class="comment">// 设置包的缓冲区长度为读入的字节数</span></div><div class="line">					dsk.send(dpk);<span class="comment">// 发送包</span></div><div class="line">					<span class="comment">// 等待服务端回应</span></div><div class="line">					&#123;</div><div class="line">						<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">							dpk.setData(receiveBuf, <span class="number">0</span>, receiveBuf.length);<span class="comment">// UDPUtils.successData.length);</span></div><div class="line">							<span class="keyword">try</span> &#123;</div><div class="line">								dsk.receive(dpk);<span class="comment">// 接收数据包</span></div><div class="line">								<span class="keyword">if</span> (!UDPUtils.isEqualsByteArray(UDPUtils.successData, receiveBuf, dpk.getLength())) &#123;<span class="comment">// 返回的不是成功标志</span></div><div class="line">									<span class="keyword">throw</span> <span class="keyword">new</span> TimeoutException(<span class="string">"数据没有收到！"</span>);</div><div class="line">								&#125; <span class="keyword">else</span> &#123;</div><div class="line">									<span class="keyword">break</span>;</div><div class="line">								&#125;</div><div class="line">							&#125; <span class="keyword">catch</span> (SocketTimeoutException | TimeoutException e) &#123;<span class="comment">//没有收到数据包或返回的不是成功标志</span></div><div class="line">								<span class="comment">// TODO 超时重传</span></div><div class="line">								System.out.<span class="keyword">println</span>(<span class="string">"resend ..."</span>);</div><div class="line">								dpk.setData(buf, <span class="number">0</span>, readSize);</div><div class="line">								dsk.send(dpk);</div><div class="line">								<span class="keyword">continue</span>;</div><div class="line">							&#125;</div><div class="line">						&#125;</div><div class="line">					&#125;</div><div class="line"></div><div class="line">					System.out.<span class="keyword">println</span>(<span class="string">"send count of "</span> + (++sendCount) + <span class="string">"!"</span>);</div><div class="line">				&#125;</div><div class="line">				<span class="comment">// 发送退出标志等待回应</span></div><div class="line"></div><div class="line">				System.out.<span class="keyword">println</span>(<span class="string">"客户端退出 ...."</span>);</div><div class="line">				dpk.setData(UDPUtils.exitData, <span class="number">0</span>, UDPUtils.exitData.length);</div><div class="line">				dsk.send(dpk);</div><div class="line"></div><div class="line">				<span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</div><div class="line">					dpk.setData(receiveBuf, <span class="number">0</span>, receiveBuf.length);</div><div class="line">					<span class="comment">// byte[] receiveData = dpk.getData();</span></div><div class="line">					<span class="keyword">try</span> &#123;</div><div class="line">						dsk.receive(dpk);</div><div class="line">						<span class="keyword">if</span> (!UDPUtils.isEqualsByteArray(UDPUtils.exitData, receiveBuf, dpk.getLength())) &#123;</div><div class="line">							<span class="keyword">throw</span> <span class="keyword">new</span> TimeoutException(<span class="string">"Msg not equal"</span>);</div><div class="line">						&#125; <span class="keyword">else</span> &#123;</div><div class="line">							<span class="keyword">break</span>;</div><div class="line">						&#125;</div><div class="line">					&#125; <span class="keyword">catch</span> (SocketTimeoutException | TimeoutException e) &#123;</div><div class="line">						<span class="comment">// TODO 超时重传</span></div><div class="line">						System.out.<span class="keyword">println</span>(<span class="string">"client Resend exit message ...."</span>);</div><div class="line">						dsk.send(dpk);</div><div class="line">						<span class="keyword">continue</span>;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line">			&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">				e.printStackTrace();</div><div class="line">			&#125; <span class="keyword">finally</span> &#123;</div><div class="line">				<span class="keyword">try</span> &#123;</div><div class="line">					<span class="keyword">if</span> (accessFile != <span class="keyword">null</span>)</div><div class="line">						accessFile.close();</div><div class="line">					<span class="keyword">if</span> (dsk != <span class="keyword">null</span>)</div><div class="line">						dsk.close();</div><div class="line">				&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">					e.printStackTrace();</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			<span class="keyword">long</span> endTime = System.currentTimeMillis();</div><div class="line">			System.out.<span class="keyword">println</span>(<span class="string">"time:"</span> + (endTime - startTime));</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>You.java</code><br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.io.BufferedOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.FileOutputStream;</div><div class="line"><span class="keyword">import</span> java.io.IOException;</div><div class="line"><span class="keyword">import</span> java.net.DatagramPacket;</div><div class="line"><span class="keyword">import</span> java.net.DatagramSocket;</div><div class="line"><span class="keyword">import</span> java.net.InetAddress;</div><div class="line"><span class="keyword">import</span> java.net.InetSocketAddress;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> You &#123;</div><div class="line"></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SAVE_FILE_PATH = <span class="string">"C:/Users/马冲/Desktop/flag.zip"</span>;<span class="comment">//接收文件存储的路径</span></div><div class="line"></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(String[] args) &#123;</div><div class="line"></div><div class="line">		<span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[UDPUtils.BUFFER_SIZE];</div><div class="line"></div><div class="line">		DatagramPacket dpk = <span class="keyword">null</span>;<span class="comment">//定义一个数据包</span></div><div class="line">		DatagramSocket dsk = <span class="keyword">null</span>;<span class="comment">//定义一个接收数据包</span></div><div class="line">		BufferedOutputStream bos = <span class="keyword">null</span>;<span class="comment">//定义一个缓冲的文件输出流</span></div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			dpk = <span class="keyword">new</span> DatagramPacket(buf, buf.length,</div><div class="line">					<span class="keyword">new</span> InetSocketAddress(InetAddress.getByName(<span class="string">"127.0.0.1"</span>), UDPUtils.PORT));</div><div class="line">			dsk = <span class="keyword">new</span> DatagramSocket(UDPUtils.PORT + <span class="number">1</span>);<span class="comment">//创建一个数据包由于接收</span></div><div class="line">			bos = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(SAVE_FILE_PATH));<span class="comment">//创建一个缓冲的文件输出流</span></div><div class="line">			System.out.<span class="keyword">println</span>(<span class="string">"等待客户端...."</span>);</div><div class="line">			dsk.receive(dpk);<span class="comment">//等待客户端发送文件</span></div><div class="line"></div><div class="line">			<span class="keyword">int</span> readSize = <span class="number">0</span>;</div><div class="line">			<span class="keyword">int</span> readCount = <span class="number">0</span>;</div><div class="line">			<span class="keyword">int</span> flushSize = <span class="number">0</span>;</div><div class="line">			<span class="keyword">while</span> ((readSize = dpk.getLength()) != <span class="number">0</span>) &#123;</div><div class="line">				<span class="comment">// 验证客户端发送退出标志</span></div><div class="line">				<span class="keyword">if</span> (UDPUtils.isEqualsByteArray(UDPUtils.exitData, buf, readSize)) &#123;</div><div class="line">					System.out.<span class="keyword">println</span>(<span class="string">"服务器退出 ..."</span>);</div><div class="line">					dpk.setData(UDPUtils.exitData, <span class="number">0</span>, UDPUtils.exitData.length);<span class="comment">//设置包中数据为退出标志</span></div><div class="line">					dsk.send(dpk);<span class="comment">//发送退出标志</span></div><div class="line">					<span class="keyword">break</span>;<span class="comment">//退出</span></div><div class="line">				&#125;</div><div class="line"></div><div class="line">				bos.<span class="keyword">write</span>(buf, <span class="number">0</span>, readSize);<span class="comment">//将字节数组中的数据写入缓冲流</span></div><div class="line">				<span class="keyword">if</span> (++flushSize % <span class="number">1000</span> == <span class="number">0</span>) &#123;</div><div class="line">					flushSize = <span class="number">0</span>;</div><div class="line">					bos.flush();</div><div class="line">				&#125;</div><div class="line">				dpk.setData(UDPUtils.successData, <span class="number">0</span>, UDPUtils.successData.length);<span class="comment">//设置包中数据为接收成功标志</span></div><div class="line">				dsk.send(dpk);<span class="comment">//返回一个接收成功标志</span></div><div class="line"></div><div class="line">				dpk.setData(buf, <span class="number">0</span>, buf.length);<span class="comment">//重新设置包用于接收下一个数据包</span></div><div class="line">				System.out.<span class="keyword">println</span>(<span class="string">"receive count of "</span> + (++readCount) + <span class="string">" !"</span>);</div><div class="line">				dsk.receive(dpk);<span class="comment">//等待客户端发送文件</span></div><div class="line">			&#125;</div><div class="line"></div><div class="line">			<span class="comment">// last flush</span></div><div class="line">			bos.flush();</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125; <span class="keyword">finally</span> &#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="keyword">if</span> (bos != <span class="keyword">null</span>)</div><div class="line">					bos.close();</div><div class="line">				<span class="keyword">if</span> (dsk != <span class="keyword">null</span>)</div><div class="line">					dsk.close();</div><div class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">				e.printStackTrace();</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>UDPUtils.java</code><br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UDPUtils</span> </span>&#123;</div><div class="line">	<span class="keyword">private</span> UDPUtils() &#123;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="comment">/** transfer file byte buffer **/</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> BUFFER_SIZE = <span class="number">50</span> * <span class="number">1024</span>;</div><div class="line"></div><div class="line">	<span class="comment">/** controller port **/</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> PORT = <span class="number">50000</span>;</div><div class="line"></div><div class="line">	<span class="comment">/** mark transfer success **/</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] successData = <span class="string">"success data mark"</span>.getBytes();</div><div class="line"></div><div class="line">	<span class="comment">/** mark transfer exit **/</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">byte</span>[] exitData = <span class="string">"exit data mark"</span>.getBytes();</div><div class="line"></div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">	 * compare byteArray equest successData</span></div><div class="line"><span class="comment">	 * </span></div><div class="line"><span class="comment">	 * @param compareBuf</span></div><div class="line"><span class="comment">	 *            src</span></div><div class="line"><span class="comment">	 * @param buf</span></div><div class="line"><span class="comment">	 *            target</span></div><div class="line"><span class="comment">	 * @return</span></div><div class="line"><span class="comment">	 */</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> isEqualsByteArray(<span class="keyword">byte</span>[] compareBuf, <span class="keyword">byte</span>[] buf, <span class="keyword">int</span> len) &#123;</div><div class="line">		<span class="keyword">if</span> (buf == <span class="keyword">null</span> || buf.length == <span class="number">0</span> || compareBuf.length &lt; len)</div><div class="line">			<span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line"></div><div class="line">		<span class="keyword">boolean</span> flag = <span class="keyword">true</span>;</div><div class="line"></div><div class="line">		<span class="keyword">int</span> innerMinLen = Math.min(compareBuf.length, len);</div><div class="line">		<span class="comment">// if(buf.length == compareBuf.length)&#123;</span></div><div class="line">		<span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; innerMinLen; i++) &#123;</div><div class="line">			<span class="keyword">if</span> (buf[i] != compareBuf[i]) &#123;</div><div class="line">				flag = <span class="keyword">false</span>;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		<span class="comment">// &#125;else</span></div><div class="line">		<span class="comment">// return false;</span></div><div class="line">		<span class="keyword">return</span> flag;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;话不多说，直接上代码。&lt;br&gt;运行的时候先运行&lt;code&gt;You.java&lt;/code&gt;, 再运行&lt;code&gt;My.java&lt;/code&gt;&lt;br&gt;&lt;code&gt;My.java&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight gradle&quot;&gt;&lt;table&gt;
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>UDP通信-AES和Base64加解密</title>
    <link href="http://yoursite.com/2017/12/04/UDP%E9%80%9A%E4%BF%A1-AES%E5%92%8CBase64%E5%8A%A0%E8%A7%A3%E5%AF%86/"/>
    <id>http://yoursite.com/2017/12/04/UDP通信-AES和Base64加解密/</id>
    <published>2017-12-04T12:25:35.000Z</published>
    <updated>2017-12-04T12:36:43.335Z</updated>
    
    <content type="html"><![CDATA[<p>基于UDP的通信和基于TCP的通信不同，基于UDP的信息传递更快，但不提供可靠性保证。也就是说，数据在传输时，用户无法知道能否正确地到达目的地主机，也不能确定数据到达目的地地顺序是否和发送地顺序相同。<br>基于UDP通信地基本模式如下:<br>(1)将数据打包，称为数据包，然后将数据包发往目的地。<br>(2)接收别人发来地数据包，然后查看数据包中地内容。</p>
<h3 id="发送数据包"><a href="#发送数据包" class="headerlink" title="发送数据包"></a>发送数据包</h3><p>用DatagramPacket类将数据打包，即用DatagramPacket类创建一个对象，称为数据包。用DatagramPacket地以下两个构造方法创建待发送地数据包: DatagramPacket(byte data[], int length, InetAddtress address, int port);<br>使用该构造方法创建地数据包对象具有下列两个性质：<br>(1)含有data数组指定地数据<br>(2)该数据包将发送到地址是adress、端口号是port的主机上。<br>用DatagramSocket类的不带参数的构造方法DatagramSocket()创建一个对象，该对象负责发送数据包。例如: </p>
<blockquote>
<p>DatagramSocket mail_out= new DatagramSocket();<br>mail_out.send(data_pack);</p>
</blockquote>
<p>下面附上<code>Mac.java</code>, 其中使用了AES和Base64加解密。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.net.*;</div><div class="line"><span class="keyword">import</span> java.<span class="built_in">text</span>.SimpleDateFormat;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.awt.event.*;</div><div class="line"><span class="keyword">import</span> javax.crypto.Cipher;</div><div class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</div><div class="line"><span class="keyword">import</span> javax.swing.*;</div><div class="line"><span class="keyword">import</span> org.apache.commons.codec.<span class="built_in">binary</span>.Base64;</div><div class="line"></div><div class="line"><span class="keyword">public</span> class Mac&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</div><div class="line">		MaCs maC= <span class="keyword">new</span> MaCs();</div><div class="line">	&#125; </div><div class="line">&#125;</div><div class="line"></div><div class="line">class MaCs extends JFrame implements Runnable, ActionListener, KeyListener&#123;</div><div class="line"></div><div class="line">	SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</div><div class="line">	JTextField out_message1= <span class="keyword">new</span> JTextField(<span class="number">12</span>);</div><div class="line">	JTextArea in_message= <span class="keyword">new</span> JTextArea();</div><div class="line">	JButton send= <span class="keyword">new</span> JButton(<span class="string">"发送"</span>);</div><div class="line">	</div><div class="line">	<span class="keyword">String</span> password = <span class="string">"ABCDEFGHIJKLMNOP"</span>;</div><div class="line">	</div><div class="line">	MaCs()&#123;</div><div class="line">		setTitle(<span class="string">"SS"</span>);</div><div class="line">		setSize(<span class="number">400</span>, <span class="number">200</span>);</div><div class="line">		setBounds(<span class="number">700</span>, <span class="number">200</span>, <span class="number">350</span>, <span class="number">300</span>);</div><div class="line">		setVisible(<span class="keyword">true</span>);</div><div class="line">		send.addActionListener(<span class="keyword">this</span>);</div><div class="line">		out_message1.addKeyListener(<span class="keyword">this</span>);</div><div class="line">		</div><div class="line">		JPanel pSouthJPanel= <span class="keyword">new</span> JPanel();</div><div class="line">		pSouthJPanel.<span class="built_in">add</span>(out_message1);</div><div class="line">		pSouthJPanel.<span class="built_in">add</span>(send);</div><div class="line">		</div><div class="line">		<span class="built_in">add</span>(pSouthJPanel, <span class="string">"South"</span>);</div><div class="line">		<span class="built_in">add</span>(<span class="keyword">new</span> JScrollPane(in_message), <span class="string">"Center"</span>);</div><div class="line">		in_message.setEditable(<span class="keyword">false</span>);</div><div class="line">		validate();</div><div class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</div><div class="line">		Thread thread= <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</div><div class="line">		thread.start();<span class="comment">//线程负责接收数据包</span></div><div class="line">	&#125;</div><div class="line">    </div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">     * 使用参数中的密钥加密</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> Encrypt(<span class="keyword">String</span> sSrc, <span class="keyword">String</span> sKey) &#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="keyword">if</span> (sKey == <span class="keyword">null</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key为空null"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 判断Key是否为16位</span></div><div class="line">            <span class="keyword">if</span> (sKey.length() != <span class="number">16</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key长度不是16位"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">byte</span>[] raw = sKey.getBytes(<span class="string">"utf-8"</span>);</div><div class="line">            SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</div><div class="line">            <span class="comment">//SecretKeySpec类是KeySpec接口的实现类，用于构建秘密密钥规范</span></div><div class="line">            <span class="comment">//构造一个用AES算法加密的密钥</span></div><div class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);<span class="comment">//"算法/模式/补码方式，创建密码器"</span></div><div class="line">            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);<span class="comment">//初始化为加密模式的密码器</span></div><div class="line">            <span class="comment">//Cipher为加密解密提供密码功能</span></div><div class="line">            <span class="built_in">byte</span>[] encrypted = cipher.doFinal(sSrc.getBytes(<span class="string">"utf-8"</span>));<span class="comment">//加密</span></div><div class="line"></div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Base64().encodeToString(encrypted);<span class="comment">//此处使用BASE64做转码功能，同时能起到2次加密的作用。</span></div><div class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="comment">//在命令行打印异常信息在程序中出错的位置及原因</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">     * 使用参数中的密钥解密</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> Decrypt(<span class="keyword">String</span> sSrc, <span class="keyword">String</span> sKey) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// 判断Key是否正确</span></div><div class="line">            <span class="keyword">if</span> (sKey == <span class="keyword">null</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key为空null"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 判断Key是否为16位</span></div><div class="line">            <span class="keyword">if</span> (sKey.length() != <span class="number">16</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key长度不是16位"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">byte</span>[] raw = sKey.getBytes(<span class="string">"utf-8"</span>);</div><div class="line">            SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</div><div class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);</div><div class="line">            cipher.init(Cipher.DECRYPT_MODE, skeySpec);</div><div class="line">            <span class="built_in">byte</span>[] encrypted1 = <span class="keyword">new</span> Base64().decode(sSrc);<span class="comment">//先用base64解密</span></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="built_in">byte</span>[] original = cipher.doFinal(encrypted1);</div><div class="line">                <span class="keyword">String</span> originalString = <span class="keyword">new</span> <span class="keyword">String</span>(original,<span class="string">"utf-8"</span>);</div><div class="line">                <span class="keyword">return</span> originalString;</div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                System.out.<span class="built_in">println</span>(e.toString());</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">            System.out.<span class="built_in">println</span>(ex.toString());</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">	<span class="comment">//回车发送</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">keyPressed</span>(KeyEvent e) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		<span class="keyword">if</span> (e.getKeyCode()== <span class="number">10</span>) &#123;</div><div class="line">			(<span class="keyword">this</span>).actionPerformed(<span class="keyword">null</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent event) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		<span class="keyword">String</span> content1 = Encrypt(out_message1.getText(), password);</div><div class="line">		<span class="built_in">byte</span> buffer[]= content1.<span class="built_in">trim</span>().getBytes();</div><div class="line">		</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			InetAddress address= InetAddress.getByName(<span class="string">"192.168.199.143"</span>);</div><div class="line">			DatagramPacket datagramPacket= <span class="keyword">new</span> DatagramPacket(buffer, buffer.length, address, <span class="number">888</span>);</div><div class="line">			DatagramSocket mailDatagramSocket= <span class="keyword">new</span> DatagramSocket();</div><div class="line">			mailDatagramSocket.send(datagramPacket);</div><div class="line">			<span class="keyword">String</span> content2 = Decrypt(content1, password);</div><div class="line">			in_message.<span class="built_in">append</span>(<span class="string">"----------"</span>+ df.format(<span class="keyword">new</span> Date())+ <span class="string">"----------\nss: "</span>+ content2+ <span class="string">"\n"</span>);</div><div class="line">			out_message1.setText(<span class="keyword">null</span>);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		DatagramPacket packet= <span class="keyword">null</span>;</div><div class="line">		DatagramSocket mailDatagramSocket=<span class="keyword">null</span>;</div><div class="line">		<span class="built_in">byte</span> data[]= <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">8192</span>];<span class="comment">//定义数据包的大小</span></div><div class="line">		</div><div class="line">		<span class="keyword">try</span>&#123;</div><div class="line">			packet= <span class="keyword">new</span> DatagramPacket(data, data.length);</div><div class="line">			mailDatagramSocket= <span class="keyword">new</span> DatagramSocket(<span class="number">666</span>);</div><div class="line">		&#125; <span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</div><div class="line">			<span class="keyword">if</span> (mailDatagramSocket== <span class="keyword">null</span>) &#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> &#123;</div><div class="line">				<span class="keyword">try</span> &#123;</div><div class="line">					mailDatagramSocket.receive(packet);<span class="comment">//可能会发生堵塞，直到收到数据包</span></div><div class="line">					<span class="keyword">String</span> mesString= <span class="keyword">new</span> <span class="keyword">String</span>(packet.getData(), <span class="number">0</span>, packet.getLength());</div><div class="line">					<span class="keyword">String</span> content3 = Decrypt(mesString, password);</div><div class="line">					<span class="comment">//System.out.println("123");</span></div><div class="line">					in_message.<span class="built_in">append</span>(<span class="string">"**********"</span>+ df.format(<span class="keyword">new</span> Date())+ <span class="string">"**********\n"</span>);</div><div class="line">					in_message.<span class="built_in">append</span>(<span class="string">"mc: "</span>+ content3+ <span class="string">"\n"</span>);</div><div class="line">				&#125; <span class="keyword">catch</span> (Exception e1) &#123;</div><div class="line">					<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> keyReleased(KeyEvent e) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">keyTyped</span>(KeyEvent e) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="接收数据包"><a href="#接收数据包" class="headerlink" title="接收数据包"></a>接收数据包</h3><p>用DatagramSocket的另一个构造方法DatagramSocket(int port)创建一个对象，其中的参数必须和待接收的数据包的端口号相同。例如，如果发送方发送的数据包的端口是5666，那么如下创建DatagramSocket对象:<br>DatagramSocket mail_in= new DatagramSocket(5666);<br>然后对象maill_in使用方法receive(DatagramPacket pack)接收数据包。该方法有一个数据包参数pack，方法receive把收到的数据包传递给该参数。因此，用户必须预备一个数据包，以便收取数据包。这时需使用DatagramPack类的另一个构造方法DatagramPacket(byte data[], int length)创建一个数据包，用于接收数据包，例如: </p>
<blockquote>
<p>byte data[]= new byte[100];<br>int length= 90;<br>DatagramPacket pack= new DatagramPacket(data, length);<br>mail_in.receive(pack);</p>
</blockquote>
<p>该数据包pack将接收长度是length字节的数据放入data。<br>值得注意的是: receive方法可能会堵塞，直到收到数据包。<br>下面附上<code>Shens.java</code>, 其中同样使用了AES、Base64加解密。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> java.net.*;</div><div class="line"><span class="keyword">import</span> java.<span class="built_in">text</span>.SimpleDateFormat;</div><div class="line"><span class="keyword">import</span> java.util.Date;</div><div class="line"><span class="keyword">import</span> java.awt.event.*;</div><div class="line"><span class="keyword">import</span> javax.crypto.Cipher;</div><div class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</div><div class="line"><span class="keyword">import</span> javax.swing.*;</div><div class="line"><span class="keyword">import</span> org.apache.commons.codec.<span class="built_in">binary</span>.Base64;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> class Shens&#123;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</div><div class="line">		ShenSs shenS= <span class="keyword">new</span> ShenSs();</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">class ShenSs extends JFrame implements Runnable, ActionListener, KeyListener&#123;</div><div class="line">	</div><div class="line">	SimpleDateFormat df = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>);</div><div class="line">	JTextField out_message= <span class="keyword">new</span> JTextField(<span class="number">12</span>);</div><div class="line">	JTextArea in_message= <span class="keyword">new</span> JTextArea();</div><div class="line">	JButton send=<span class="keyword">new</span> JButton(<span class="string">"发送"</span>);</div><div class="line"></div><div class="line">	<span class="keyword">String</span> password = <span class="string">"ABCDEFGHIJKLMNOP"</span>;</div><div class="line">	</div><div class="line">	ShenSs()&#123;</div><div class="line">		setTitle(<span class="string">"MC"</span>);</div><div class="line">		<span class="comment">//setSize(400, 200);</span></div><div class="line">		setBounds(<span class="number">300</span>, <span class="number">200</span>, <span class="number">350</span>, <span class="number">300</span>);</div><div class="line">		setVisible(<span class="keyword">true</span>);</div><div class="line">		send.addActionListener(<span class="keyword">this</span>);</div><div class="line">		out_message.addKeyListener(<span class="keyword">this</span>);</div><div class="line"></div><div class="line">		JPanel panel= <span class="keyword">new</span> JPanel();<span class="comment">//创建一个面板，里面可以布局</span></div><div class="line">		panel.<span class="built_in">add</span>(out_message);</div><div class="line">		panel.<span class="built_in">add</span>(send);</div><div class="line"></div><div class="line">		<span class="built_in">add</span>(panel, <span class="string">"South"</span>);</div><div class="line">		<span class="built_in">add</span>(<span class="keyword">new</span> JScrollPane(in_message), <span class="string">"Center"</span>);</div><div class="line">		in_message.setEditable(<span class="keyword">false</span>);</div><div class="line">		validate();<span class="comment">//验证此容器及所有组件</span></div><div class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</div><div class="line">		Thread thread= <span class="keyword">new</span> Thread(<span class="keyword">this</span>);</div><div class="line">		thread.start();<span class="comment">//线程负责接收数据包 </span></div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">     * 使用参数中的密钥加密</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> Encrypt(<span class="keyword">String</span> sSrc, <span class="keyword">String</span> sKey) &#123;</div><div class="line">        <span class="keyword">try</span>&#123;</div><div class="line">            <span class="keyword">if</span> (sKey == <span class="keyword">null</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key为空null"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 判断Key是否为16位</span></div><div class="line">            <span class="keyword">if</span> (sKey.length() != <span class="number">16</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key长度不是16位"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">byte</span>[] raw = sKey.getBytes(<span class="string">"utf-8"</span>);<span class="comment">//字节型数组</span></div><div class="line">            SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</div><div class="line">            <span class="comment">//SecretKeySpec类是KeySpec接口的实现类，用于构建秘密密钥规范</span></div><div class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);<span class="comment">//"算法/模式/补码方式"</span></div><div class="line">            cipher.init(Cipher.ENCRYPT_MODE, skeySpec);</div><div class="line">            <span class="comment">//Cipher为加密解密提供密码功能</span></div><div class="line">            <span class="built_in">byte</span>[] encrypted = cipher.doFinal(sSrc.getBytes(<span class="string">"utf-8"</span>));</div><div class="line"></div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Base64().encodeToString(encrypted);<span class="comment">//此处使用BASE64做转码功能，同时能起到2次加密的作用。</span></div><div class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            <span class="comment">//在命令行打印异常信息在程序中出错的位置及原因</span></div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">	<span class="comment">/**</span></div><div class="line"><span class="comment">     * 使用参数中的密钥解密</span></div><div class="line"><span class="comment">     */</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> Decrypt(<span class="keyword">String</span> sSrc, <span class="keyword">String</span> sKey) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// 判断Key是否正确</span></div><div class="line">            <span class="keyword">if</span> (sKey == <span class="keyword">null</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key为空null"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">// 判断Key是否为16位</span></div><div class="line">            <span class="keyword">if</span> (sKey.length() != <span class="number">16</span>) &#123;</div><div class="line">                System.out.<span class="built_in">print</span>(<span class="string">"Key长度不是16位"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">byte</span>[] raw = sKey.getBytes(<span class="string">"utf-8"</span>);</div><div class="line">            SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</div><div class="line">            <span class="comment">//SecretKeySpec类是KeySpec接口的实现类，用于构建秘密密钥规范</span></div><div class="line">            Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);<span class="comment">//只实例化一次</span></div><div class="line">            <span class="comment">//Cipher为加密解密提供密码功能</span></div><div class="line">            cipher.init(Cipher.DECRYPT_MODE, skeySpec);</div><div class="line">            <span class="comment">//初始化为解密模式的密码器</span></div><div class="line">            <span class="built_in">byte</span>[] encrypted1 = <span class="keyword">new</span> Base64().decode(sSrc);<span class="comment">//先用base64解密</span></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="built_in">byte</span>[] original = cipher.doFinal(encrypted1);<span class="comment">//解密</span></div><div class="line">                <span class="keyword">String</span> originalString = <span class="keyword">new</span> <span class="keyword">String</span>(original,<span class="string">"utf-8"</span>);</div><div class="line">                <span class="keyword">return</span> originalString;<span class="comment">//明文</span></div><div class="line">            &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">                System.out.<span class="built_in">println</span>(e.toString());</div><div class="line">                <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">            System.out.<span class="built_in">println</span>(ex.toString());</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">	<span class="comment">//回车发送</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">keyPressed</span>(KeyEvent e) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		<span class="keyword">if</span> (e.getKeyCode()== <span class="number">10</span>) &#123;</div><div class="line">			(<span class="keyword">this</span>).actionPerformed(<span class="keyword">null</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> actionPerformed(ActionEvent event) &#123;<span class="comment">//单击按钮发送数据包</span></div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		<span class="keyword">String</span> content1 = Encrypt(out_message.getText(), password);</div><div class="line">		<span class="built_in">byte</span> buffer[]= content1.<span class="built_in">trim</span>().getBytes();</div><div class="line">		<span class="keyword">try</span> &#123;</div><div class="line">			InetAddress address= InetAddress.getByName(<span class="string">"127.0.0.1"</span>);</div><div class="line">			DatagramPacket datagramPacket= <span class="keyword">new</span> DatagramPacket(buffer, buffer.length, address, <span class="number">666</span>);</div><div class="line">			<span class="comment">//存放数据的数据报</span></div><div class="line">			DatagramSocket mailDatagramSocket= <span class="keyword">new</span> DatagramSocket();</div><div class="line">			<span class="comment">//接受或发送数据报的套接字</span></div><div class="line">			mailDatagramSocket.send(datagramPacket);</div><div class="line">			<span class="keyword">String</span> content2 = Decrypt(content1, password);</div><div class="line">			in_message.<span class="built_in">append</span>(<span class="string">"**********"</span>+ df.format(<span class="keyword">new</span> Date())+ <span class="string">"**********\nmc: "</span>+ content2+ <span class="string">"\n"</span>);</div><div class="line">			out_message.setText(<span class="keyword">null</span>);</div><div class="line">		&#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">			<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> run() &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">		DatagramPacket packet= <span class="keyword">null</span>;</div><div class="line">		DatagramSocket mailDatagramSocket=<span class="keyword">null</span>;</div><div class="line">		<span class="built_in">byte</span> data[]= <span class="keyword">new</span> <span class="built_in">byte</span>[<span class="number">8192</span>];<span class="comment">//指定数据包的大小</span></div><div class="line">		</div><div class="line">		<span class="keyword">try</span>&#123;</div><div class="line">			packet= <span class="keyword">new</span> DatagramPacket(data, data.length);</div><div class="line">			mailDatagramSocket= <span class="keyword">new</span> DatagramSocket(<span class="number">888</span>);</div><div class="line">		&#125; <span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">			</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</div><div class="line">			<span class="keyword">if</span> (mailDatagramSocket== <span class="keyword">null</span>) &#123;</div><div class="line">				<span class="keyword">break</span>;</div><div class="line">			&#125;</div><div class="line">			<span class="keyword">else</span> &#123;</div><div class="line">				<span class="keyword">try</span> &#123;</div><div class="line">					mailDatagramSocket.receive(packet);</div><div class="line">					<span class="keyword">String</span> mesString= <span class="keyword">new</span> <span class="keyword">String</span>(packet.getData(), <span class="number">0</span>, packet.getLength());</div><div class="line">					<span class="keyword">String</span> content3 = Decrypt(mesString, password);</div><div class="line">					in_message.<span class="built_in">append</span>(<span class="string">"----------"</span>+ df.format(<span class="keyword">new</span> Date())+ <span class="string">"----------\n"</span>);</div><div class="line">					in_message.<span class="built_in">append</span>(<span class="string">"ss: "</span>+ content3+ <span class="string">"\n"</span>);	</div><div class="line">				&#125; <span class="keyword">catch</span> (Exception e1) &#123;</div><div class="line">					<span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> keyReleased(KeyEvent e) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="built_in">keyTyped</span>(KeyEvent e) &#123;</div><div class="line">		<span class="comment">// TODO Auto-generated method stub</span></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>由于使用了Base64加解密，会出现<code>Base64 cannot be resolved to a type</code>这个错误。可以参考我的上一篇<a href="https://sunstady.github.io/2017/11/28/Java%E8%A7%A3%E5%86%B3Base64%E5%8C%85%E9%97%AE%E9%A2%98/" target="_blank" rel="external">博文</a>，那里有解决的方法。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;基于UDP的通信和基于TCP的通信不同，基于UDP的信息传递更快，但不提供可靠性保证。也就是说，数据在传输时，用户无法知道能否正确地到达目的地主机，也不能确定数据到达目的地地顺序是否和发送地顺序相同。&lt;br&gt;基于UDP通信地基本模式如下:&lt;br&gt;(1)将数据打包，称为数据包
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java解决Base64包问题</title>
    <link href="http://yoursite.com/2017/11/28/Java%E8%A7%A3%E5%86%B3Base64%E5%8C%85%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/11/28/Java解决Base64包问题/</id>
    <published>2017-11-28T13:28:09.000Z</published>
    <updated>2017-11-28T13:34:34.977Z</updated>
    
    <content type="html"><![CDATA[<p>java中使用AES对数据进行加解密<br><code>算法模式：ECB 密钥 
长度：128bits 16位长 
偏移量： 默认 
补码方式：PKCS5Padding 
解密串编码方式：base64</code><br>密钥为16位长度的字符串<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 使用参数中的密钥加密</span></div><div class="line"><span class="comment"> * @param 明文</span></div><div class="line"><span class="comment"> * @param 密钥</span></div><div class="line"><span class="comment"> * @return 密文</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> Encrypt(<span class="keyword">String</span> sSrc, <span class="keyword">String</span> sKey) &#123;</div><div class="line">    <span class="keyword">try</span>&#123;</div><div class="line">        <span class="keyword">if</span> (sKey == <span class="keyword">null</span>) &#123;</div><div class="line">            System.out.<span class="built_in">print</span>(<span class="string">"Key为空null"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 判断Key是否为16位</span></div><div class="line">        <span class="keyword">if</span> (sKey.length() != <span class="number">16</span>) &#123;</div><div class="line">            System.out.<span class="built_in">print</span>(<span class="string">"Key长度不是16位"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">byte</span>[] raw = sKey.getBytes(<span class="string">"utf-8"</span>);</div><div class="line">        SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</div><div class="line">        Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);<span class="comment">//"算法/模式/补码方式"</span></div><div class="line">        cipher.init(Cipher.ENCRYPT_MODE, skeySpec);</div><div class="line">        <span class="built_in">byte</span>[] encrypted = cipher.doFinal(sSrc.getBytes(<span class="string">"utf-8"</span>));</div><div class="line"></div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Base64().encodeToString(encrypted);<span class="comment">//此处使用BASE64做转码功能，同时能起到2次加密的作用。</span></div><div class="line">    &#125;<span class="keyword">catch</span>(Exception e)&#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment"> * 使用参数中的密钥解密</span></div><div class="line"><span class="comment"> * @param 密文</span></div><div class="line"><span class="comment"> * @param 密钥</span></div><div class="line"><span class="comment"> * @return 明文</span></div><div class="line"><span class="comment"> */</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> Decrypt(<span class="keyword">String</span> sSrc, <span class="keyword">String</span> sKey) &#123;</div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">// 判断Key是否正确</span></div><div class="line">        <span class="keyword">if</span> (sKey == <span class="keyword">null</span>) &#123;</div><div class="line">            System.out.<span class="built_in">print</span>(<span class="string">"Key为空null"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 判断Key是否为16位</span></div><div class="line">        <span class="keyword">if</span> (sKey.length() != <span class="number">16</span>) &#123;</div><div class="line">            System.out.<span class="built_in">print</span>(<span class="string">"Key长度不是16位"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">byte</span>[] raw = sKey.getBytes(<span class="string">"utf-8"</span>);</div><div class="line">        SecretKeySpec skeySpec = <span class="keyword">new</span> SecretKeySpec(raw, <span class="string">"AES"</span>);</div><div class="line">        Cipher cipher = Cipher.getInstance(<span class="string">"AES/ECB/PKCS5Padding"</span>);</div><div class="line">        cipher.init(Cipher.DECRYPT_MODE, skeySpec);</div><div class="line">        <span class="built_in">byte</span>[] encrypted1 = <span class="keyword">new</span> Base64().decode(sSrc);<span class="comment">//先用base64解密</span></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="built_in">byte</span>[] original = cipher.doFinal(encrypted1);</div><div class="line">            <span class="keyword">String</span> originalString = <span class="keyword">new</span> <span class="keyword">String</span>(original,<span class="string">"utf-8"</span>);</div><div class="line">            <span class="keyword">return</span> originalString;</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            System.out.<span class="built_in">println</span>(e.toString());</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception ex) &#123;</div><div class="line">        System.out.<span class="built_in">println</span>(ex.toString());</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">测试方法</div><div class="line"><span class="keyword">String</span> password = <span class="string">"ABCDEFGHIJKLMNOP"</span>;</div><div class="line"><span class="keyword">String</span> content1 = <span class="string">"我的博客名是geekfly"</span>;</div><div class="line">System.out.<span class="built_in">println</span>(<span class="string">"加密前："</span> + content1);  </div><div class="line"><span class="keyword">String</span> content2 = Encrypt(content1, password);</div><div class="line">System.out.<span class="built_in">println</span>(<span class="string">"加密后："</span> + content2);</div><div class="line"><span class="keyword">String</span> content3 = Decrypt(content2, password);</div><div class="line">System.out.<span class="built_in">println</span>(<span class="string">"解密后："</span> + content3);</div></pre></td></tr></table></figure>
<p>在这个过程中出现个问题，<code>base64 cannot be resolved to a type</code>,<br>问题显示: <code>The import org.apache cannot be resolved</code>.<br>解决方法: 去 <a href="http://hc.apache.org/downloads.cgi" target="_blank" rel="external">http://hc.apache.org/downloads.cgi</a> 下载， <code>HttpClient4.5.3.zip</code>, 解压后得到<code>\httpcomponents-client-4.5.3\lib</code>, 里面有很多jar包<img src="https://raw.githubusercontent.com/sunstady/hexo/b6fc09a76883f5f28ca0c3bb665b9e130d4511d9/base64/1.jpg" alt="jar"><br>加进来<img src="https://raw.githubusercontent.com/sunstady/hexo/b6fc09a76883f5f28ca0c3bb665b9e130d4511d9/base64/2.jpg" alt="jar"><br>这样就好了！<img src="https://raw.githubusercontent.com/sunstady/hexo/b6fc09a76883f5f28ca0c3bb665b9e130d4511d9/base64/3.jpg" alt="jar"><br>总结下：org.apache, 不是标准的java中的库。所以eclipse中，无法自动识别。<br>org.apache下包括了一堆相关的库，此处用到的是org.apache.http, 所以：需要找到对应的org.apache.http相关的jar包，然后加到当前的项目中。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;java中使用AES对数据进行加解密&lt;br&gt;&lt;code&gt;算法模式：ECB 密钥 
长度：128bits 16位长 
偏移量： 默认 
补码方式：PKCS5Padding 
解密串编码方式：base64&lt;/code&gt;&lt;br&gt;密钥为16位长度的字符串&lt;br&gt;&lt;figure cl
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java获取本机外网IP</title>
    <link href="http://yoursite.com/2017/11/28/Java%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BA%E5%A4%96%E7%BD%91IP/"/>
    <id>http://yoursite.com/2017/11/28/Java获取本机外网IP/</id>
    <published>2017-11-28T02:25:19.000Z</published>
    <updated>2017-11-28T02:27:13.655Z</updated>
    
    <content type="html"><![CDATA[<p>一种可行的获取方法，是通过http请求从网站中取出ip字段。例如: <a href="http://ip.chinaz.com/" target="_blank" rel="external">http://ip.chinaz.com/</a><br>通过这个网址，加上简单的正则表达式，即可得到<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> getV4IP()&#123;</div><div class="line">	<span class="keyword">String</span> ip = <span class="string">""</span>;</div><div class="line">	<span class="keyword">String</span> chinaz = <span class="string">"http://ip.chinaz.com"</span>;</div><div class="line">	</div><div class="line">	StringBuilder inputLine = <span class="keyword">new</span> <span class="type">StringBuilder</span>();</div><div class="line">	<span class="keyword">String</span> read = <span class="string">""</span>;</div><div class="line">	URL url = <span class="literal">null</span>;</div><div class="line">	HttpURLConnection urlConnection = <span class="literal">null</span>;</div><div class="line">	BufferedReader <span class="keyword">in</span> = <span class="literal">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		url = <span class="keyword">new</span> <span class="type">URL</span>(chinaz);</div><div class="line">		urlConnection = (HttpURLConnection) url.openConnection();</div><div class="line">	    <span class="keyword">in</span> = <span class="keyword">new</span> <span class="type">BufferedReader</span>( <span class="keyword">new</span> <span class="type">InputStreamReader</span>(urlConnection.getInputStream(),<span class="string">"UTF-8"</span>));</div><div class="line">		<span class="keyword">while</span>((read=<span class="keyword">in</span>.readLine())!=<span class="literal">null</span>)&#123;</div><div class="line">			inputLine.append(read+<span class="string">"\r\n"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="comment">//System.out.println(inputLine.toString());</span></div><div class="line">	&#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;finally&#123;</div><div class="line">		<span class="keyword">if</span>(<span class="keyword">in</span>!=<span class="literal">null</span>)&#123;</div><div class="line">			<span class="keyword">try</span> &#123;</div><div class="line">				<span class="keyword">in</span>.close();</div><div class="line">			&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">				<span class="comment">// TODO Auto-generated catch block</span></div><div class="line">				e.printStackTrace();</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	</div><div class="line">	Pattern p = Pattern.compile(<span class="string">"\\&lt;dd class\\=\"fz24\"&gt;(.*?)\\&lt;\\/dd&gt;"</span>);</div><div class="line">	Matcher m = p.matcher(inputLine.toString());</div><div class="line">	<span class="keyword">if</span>(m.find())&#123;</div><div class="line">		<span class="keyword">String</span> ipstr = m.group(<span class="number">1</span>);</div><div class="line">		ip = ipstr;</div><div class="line">		<span class="comment">//System.out.println(ipstr);</span></div><div class="line">	&#125;</div><div class="line">	<span class="keyword">return</span> ip;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一种可行的获取方法，是通过http请求从网站中取出ip字段。例如: &lt;a href=&quot;http://ip.chinaz.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://ip.chinaz.com/&lt;/a&gt;&lt;br&gt;通过这个网址，加上简单
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>CLOCK置换算法</title>
    <link href="http://yoursite.com/2017/11/13/CLOCK%E7%BD%AE%E6%8D%A2%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2017/11/13/CLOCK置换算法/</id>
    <published>2017-11-13T14:33:47.000Z</published>
    <updated>2017-11-13T14:35:02.644Z</updated>
    
    <content type="html"><![CDATA[<p>在请求分页存储管理系统中，若为进程分配的物理块为4，开始执行时内存中没有装入任何页面，若进程依次访问的页面号为：7，1，6，4，6，2，3，0，3，1，0，7，6，0，1，3，6，3，0，7，2，0，5请用CLOCK算法完成作业(低物理地址优先)<br><code>红色代表访问位为1，星号表示替换指针的位置</code><br><img src="https://raw.githubusercontent.com/sunstady/hexo/304771c47487cd69f4cb50b569c158cf851fa633/clock/11.png" alt="clock"></p>
<p>缺页次数: 14次<br>缺页率: 14/23= 60.9%<br>置换次数: 10次<br>依次被置换的页号: 7 1 6 4 2 3 0 1 7 6<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="number">7</span>号页面：进程分配的物理块为<span class="number">4</span>，开始执行的时候没有装入任何页面，当开始访问<span class="number">7</span>号页面的时候，内存中没有该页面号，将页面直接调入内存，低物理地址优先，将页面放入第一个物理块，把访问位置为<span class="number">1.</span></div><div class="line"><span class="number">1</span>、<span class="number">6</span>、<span class="number">4</span>号页面：访问<span class="number">1</span>号页面的时候，内存中没有该页面号，且内存中还有空位，将<span class="number">1</span>、<span class="number">6</span>、<span class="number">4</span>号页面放入内存，把访问位置为<span class="number">1</span>，替换指针指向最高地址的物理块。</div><div class="line"><span class="number">6</span>号页面：访问<span class="number">6</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">2</span>号页面：访问<span class="number">2</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">7</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">1</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">6</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">4</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会。检查到队列的最后一个页面时，访问位仍为<span class="number">1</span>，返回队首检查第一个页面，发现访问位为<span class="number">0</span>，则选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">3</span>号页面：访问<span class="number">3</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">1</span>号页面，访问位为<span class="number">0</span>，选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">0</span>号页面：访问<span class="number">0</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">6</span>号页面，访问位为<span class="number">0</span>，选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">3</span>号页面：访问<span class="number">3</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">1</span>号页面：访问<span class="number">1</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">4</span>号页面，访问位为<span class="number">0</span>，选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">0</span>号页面：访问<span class="number">0</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">7</span>号页面：访问<span class="number">7</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">2</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">3</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">9</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">1</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会。检查到队列的最后一个页面时，访问位仍为<span class="number">1</span>，返回队首检查第一个页面，发现访问位为<span class="number">0</span>，则选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">6</span>号页面：访问<span class="number">6</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">3</span>号页面，访问位为<span class="number">0</span>，选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">0</span>号页面：访问<span class="number">0</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">1</span>号页面：访问<span class="number">1</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">3</span>号页面：访问<span class="number">3</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">0</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">1</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">7</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">6</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会。检查到队列的最后一个页面时，访问位仍为<span class="number">1</span>，返回队首检查第一个页面，发现访问位为<span class="number">0</span>，则选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">6</span>号页面：访问<span class="number">6</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">3</span>号页面：访问<span class="number">3</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">0</span>号页面：访问<span class="number">0</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">1</span>号页面，访问位为<span class="number">0</span>，选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">7</span>号页面：访问<span class="number">7</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">2</span>号页面：访问<span class="number">2</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">7</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">6</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">3</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会；检查<span class="number">0</span>号页面，访问位为<span class="number">1</span>，将其置为<span class="number">0</span>，暂不换出，给予该页第二次驻留内存的机会。检查到队列的最后一个页面时，访问位仍为<span class="number">1</span>，返回队首检查第一个页面，发现访问位为<span class="number">0</span>，则选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div><div class="line"><span class="number">0</span>号页面：访问<span class="number">0</span>号页面的时候，内存中有，将其访问位置为<span class="number">1</span>，替换指针不动。</div><div class="line"><span class="number">5</span>号页面：访问<span class="number">5</span>号页面的时候，内存中没有，且内存中没有空位，需要替换掉一个页面。将内存中所有的页面链成一个循环队列，从替换指针的下一位开始检查。先检查<span class="number">6</span>号页面，访问位为<span class="number">0</span>，选择此页面替换，访问位置为<span class="number">1</span>，替换指针指向被替换的页面。</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在请求分页存储管理系统中，若为进程分配的物理块为4，开始执行时内存中没有装入任何页面，若进程依次访问的页面号为：7，1，6，4，6，2，3，0，3，1，0，7，6，0，1，3，6，3，0，7，2，0，5请用CLOCK算法完成作业(低物理地址优先)&lt;br&gt;&lt;code&gt;红色代表
    
    </summary>
    
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>虚拟存储器</title>
    <link href="http://yoursite.com/2017/11/12/%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    <id>http://yoursite.com/2017/11/12/虚拟存储器/</id>
    <published>2017-11-12T13:24:14.000Z</published>
    <updated>2017-11-13T05:51:46.744Z</updated>
    
    <content type="html"><![CDATA[<p><code>1、什么是虚拟存储器？（虚存）</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">解答：虚拟存储器是由硬件和操作系统自动实现存储信息调度和管理的，是在具有层次结构存储器的计算机系统中，自动实现部分装入和部分替换功能，能从逻辑上为用户提供一个比物理贮存容量大的多，可寻址的“主存储器”。</div></pre></td></tr></table></figure></p>
<p><code>2、为什么要引入虚拟存储器？</code><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">解答：<span class="number">1</span>&gt;能提高操作系统的内存利用率和系统吞吐量 </div><div class="line"><span class="number">2</span>&gt;在计算机系统中，主存的容量有一定的限制，不可能大大满足各种用户的需要，而在技术上辅助存储器却可以做的相当大。为了给大作业提供方便，使它们不再承担对主存和辅存的具体分配和管理工作，而由操作系统把主存和辅存统一管理起来。</div></pre></td></tr></table></figure></p>
<p><code>3、虚拟存储器的特征？</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">解答：虚拟存储器具有虚拟性、离散性、多次性及强对换性等特征，其中最重要的特征是虚拟性。</div><div class="line"><span class="meta">1&gt;</span><span class="bash">	虚拟性。虚拟性是指能够从逻辑上扩充内存容量，使用户所看到的内存容量远大于实际的内存容量，这是虚拟存储器所表现出的最重要的特征，也是虚拟存储器最重要的目标。</span></div><div class="line"><span class="meta">2&gt;</span><span class="bash">	离散性。离散性是指内存分配时采用离散分配的方式，没有离散性就不可能实现虚拟存储器。采用连续分配方式，需要将作业装入到连续的内存区域，这样需要连续地一次性申请一部分内存空间，以便将整个作业先后多次装入内存。如果仍然采用连续装入的方式，则无法实现虚拟存储功能，只有采用离散分配方式，才能为它申请内存空间，以避免浪费内存空间。</span></div><div class="line"><span class="meta">3&gt;</span><span class="bash">	多次性。多次性是指一个作业被分成多次调入内存运行。作业在运行时，只将当前运行的那部分程序和数据装入内存，以后再陆续从外存将需要的部分调入内存。</span></div><div class="line"><span class="meta">4&gt;</span><span class="bash">	对换性。对换性是指允许在作业运行过程中换进换出。允许将暂时不用的程序和数据从内存调至外存的对换区，以后需要时再从外存调入到内存。</span></div></pre></td></tr></table></figure></p>
<p><code>4、虚存可以建立在分区分配管理的基础上吗？为什么？</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">解答：不可以。在虚拟存储器中，允许将一个作业分多次调入内存。入宫采用连续分配方式时，应将作业装入一个连续的内存区域中。为此，需事先为它一次性地申请足够的内存空间，以便将整个作业先后分多次装入内存，这不仅会使相当一部分内存空间都处于暂时或“永久”的空闲状态，造成内存资源的严重浪费，而且也无法从逻辑上扩大内存容量。因此，虚拟存储器的实现都是建立在离散分配存储管理方式的基础上。</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;1、什么是虚拟存储器？（虚存）&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t
    
    </summary>
    
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>人生苦短</title>
    <link href="http://yoursite.com/2017/11/10/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/"/>
    <id>http://yoursite.com/2017/11/10/人生苦短/</id>
    <published>2017-11-10T12:53:06.000Z</published>
    <updated>2017-11-10T12:53:36.891Z</updated>
    
    <content type="html"><![CDATA[<p>用Wireshark打开这个流量包<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/1.png" alt="Wireshark"><br>点文件中的导出对象，选HTTP，发现其中有如下文件<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/2.png" alt="flag"><br>在010编辑器中打开，发现flagaa中有压缩包的头部，flagaf中有压缩包的尾部，猜测应该是压缩包分解成aa-af，拼凑一下，导出压缩包<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/3.png" alt="压缩包"><br>解压此压缩包，发现有密码<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/4.png" alt="密码"><br>先尝试用<code>Ziperello</code>爆破下<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/5.png" alt="Ziperello"><br>没有加密文件，发现它是伪加密<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/6.png" alt="ZipCenOp"><br>压缩包打开，得flag<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/7.png" alt="flag"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Wireshark打开这个流量包&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>RGB</title>
    <link href="http://yoursite.com/2017/11/10/RGB/"/>
    <id>http://yoursite.com/2017/11/10/RGB/</id>
    <published>2017-11-10T12:26:17.000Z</published>
    <updated>2017-11-10T12:27:03.149Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="built_in">from</span> PIL import Image</div><div class="line">MAX = <span class="number">280</span></div><div class="line">pic = Image.<span class="built_in">new</span>(<span class="string">"RGB"</span>,(MAX, MAX))</div><div class="line"><span class="built_in">file</span> = <span class="built_in">open</span>(<span class="string">"flag.txt"</span>,<span class="string">'r'</span>)</div><div class="line">m = <span class="built_in">file</span>.<span class="built_in">read</span>().<span class="built_in">split</span>(<span class="string">'\n'</span>)</div><div class="line">i=<span class="number">0</span></div><div class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</div><div class="line">   <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</div><div class="line">       <span class="keyword">if</span>(m[i] == <span class="string">'(0, 0, 0)'</span>):</div><div class="line">           pic.putpixel([x,y],(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</div><div class="line">       <span class="keyword">else</span>:</div><div class="line">           pic.putpixel([x,y],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</div><div class="line">       i = i+<span class="number">1</span></div><div class="line">pic.show()</div><div class="line">pic.save(<span class="string">"flag.png"</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;li
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>base混合加密</title>
    <link href="http://yoursite.com/2017/11/10/base%E6%B7%B7%E5%90%88%E5%8A%A0%E5%AF%86/"/>
    <id>http://yoursite.com/2017/11/10/base混合加密/</id>
    <published>2017-11-10T12:11:44.000Z</published>
    <updated>2017-11-10T12:12:16.987Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">import base64</div><div class="line"><span class="keyword">file</span> = <span class="keyword">open</span>(<span class="string">'base.txt'</span>,<span class="string">'r'</span>)</div><div class="line"><span class="keyword">st</span> = <span class="keyword">file</span>.<span class="keyword">read</span>()</div><div class="line"><span class="keyword">while</span> True:</div><div class="line">   <span class="keyword">try</span>:</div><div class="line">       <span class="keyword">st</span> = base64.b16decode(<span class="keyword">st</span>)</div><div class="line">   excep<span class="variable">t:</span></div><div class="line">       <span class="keyword">try</span>:</div><div class="line">           <span class="keyword">st</span> = base64.b32decode(<span class="keyword">st</span>)</div><div class="line">       excep<span class="variable">t:</span></div><div class="line">           <span class="keyword">st</span> = base64.b64decode(<span class="keyword">st</span>)</div><div class="line">   <span class="keyword">if</span>(<span class="keyword">st</span>.<span class="keyword">find</span>(<span class="string">'flag'</span>) == <span class="number">0</span>):</div><div class="line">       <span class="keyword">print</span>(<span class="keyword">st</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>VMware Workstation 14黑屏问题及密钥</title>
    <link href="http://yoursite.com/2017/11/08/VMware-Workstation-14%E9%BB%91%E5%B1%8F%E9%97%AE%E9%A2%98%E5%8F%8A%E5%AF%86%E9%92%A5/"/>
    <id>http://yoursite.com/2017/11/08/VMware-Workstation-14黑屏问题及密钥/</id>
    <published>2017-11-08T11:16:42.000Z</published>
    <updated>2017-11-08T11:17:10.892Z</updated>
    
    <content type="html"><![CDATA[<p>今儿个升级VM到14，完事后打开VM，想用下kali，却发现进入黑屏，如论如何都不能解决，没办法，拜访了下度娘。<br>首先上VM的密钥：<br>VMware Workstation Pro 14 许可证序列号：<br><code>FF590-2DX83-M81LZ-XDM7E-MKUT4</code><br><code>CG54H-D8D0H-H8DHY-C6X7X-N2KG6</code><br><code>ZC3WK-AFXEK-488JP-A7MQX-XL8YF</code><br><code>AC5XK-0ZD4H-088HP-9NQZV-ZG2R4</code><br><code>ZC5XK-A6E0M-080XQ-04ZZG-YF08D</code><br><code>ZY5H0-D3Y8K-M89EZ-AYPEG-MYUA8</code></p>
<p>黑屏问题解决:<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">以管理员身份进入cmd，输入`netsh winsock reset`, 重启，问题解决</div></pre></td></tr></table></figure></p>
<p>网上也有其他的解决方法，不过没试过：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">以管理员身份运行命令提示符（<span class="keyword">cmd</span>.<span class="bash">exe），输入命令 netsh winsock show catalog</span></div><div class="line"><span class="bash">可以看到VMware注册了两个LSP：vSockets DGRAM、vSockets STREAM，路径是%windir%\system32\vsocklib.dll</span></div><div class="line"><span class="bash">观察有没有其他模块也注册了vSockets DGRAM、vSockets STREAM，如果有，就卸载掉这个模块所属的软件。</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今儿个升级VM到14，完事后打开VM，想用下kali，却发现进入黑屏，如论如何都不能解决，没办法，拜访了下度娘。&lt;br&gt;首先上VM的密钥：&lt;br&gt;VMware Workstation Pro 14 许可证序列号：&lt;br&gt;&lt;code&gt;FF590-2DX83-M81LZ-XDM
    
    </summary>
    
    
      <category term="软件" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Example5_10</title>
    <link href="http://yoursite.com/2017/10/31/Example5-10/"/>
    <id>http://yoursite.com/2017/10/31/Example5-10/</id>
    <published>2017-10-31T02:57:00.000Z</published>
    <updated>2017-10-31T02:57:41.527Z</updated>
    
    <content type="html"><![CDATA[<p><code>写一个类，该类有一个方法，public int ff(int a, int b), 该方法返回a 和b 的最大公约数。然后再编写一个该类的子类，要求子类重写方法ff，而且重写的方法将返回a 和b 的最小公约数；要求在重写的方法的方法体中首先调用被隐藏的方法返回a 和b 的最大公约数m ，然后将乘积(a* b)/ m返回；要求在应用的程序的主类中分别使用父类和子类创建对象，并分别调用方法f 计算两个正整数的最大公约数和最小公约数。</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AAb</span></span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(b&lt; a)&#123;</div><div class="line">			<span class="keyword">int</span> temp= <span class="number">0</span>;</div><div class="line">			temp= a;</div><div class="line">			a= b;</div><div class="line">			b= temp;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> r= b% a;</div><div class="line">		<span class="keyword">while</span>(r!= <span class="number">0</span>)&#123;</div><div class="line">			b= a;</div><div class="line">			a= r;</div><div class="line">			r= b% a;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> a;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">BBb</span> <span class="keyword">extends</span> <span class="title">AAb</span></span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> division= <span class="keyword">super</span>.f(a, b);</div><div class="line">		<span class="keyword">return</span> (a* b)/ division;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Example5_10</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		AAb aAb= <span class="keyword">new</span> AAb();</div><div class="line">		BBb bBb= <span class="keyword">new</span> BBb();</div><div class="line">		System.out.println(<span class="string">"最大公约数: "</span>+ aAb.f(<span class="number">36</span>, <span class="number">24</span>));</div><div class="line">		System.out.println(<span class="string">"最小公倍数: "</span>+ bBb.f(<span class="number">36</span>, <span class="number">24</span>));</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;写一个类，该类有一个方法，public int ff(int a, int b), 该方法返回a 和b 的最大公约数。然后再编写一个该类的子类，要求子类重写方法ff，而且重写的方法将返回a 和b 的最小公约数；要求在重写的方法的方法体中首先调用被隐藏的方法返回a
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Example5_9</title>
    <link href="http://yoursite.com/2017/10/31/Example5-9/"/>
    <id>http://yoursite.com/2017/10/31/Example5-9/</id>
    <published>2017-10-31T02:22:01.000Z</published>
    <updated>2017-10-31T02:22:31.889Z</updated>
    
    <content type="html"><![CDATA[<p><code>写一个类Aa， 该类创建的对象可以调用方法k输出英文字母表，然后再编写一个该类的子类Bb，要求子类Bb必须继承Aa类的方法k(不允许重写)，子类创建的对象不仅可以调用方法k输出英文字母表，而且可以调用子类新增的方法g输出希腊字母表。</code></p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">Ab</span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> final <span class="keyword">void</span> <span class="title">k</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">char</span> cStart= <span class="string">'a'</span>, cEnd= <span class="string">'z'</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">char</span> c= cStart; c&lt;= cEnd; c++)&#123;</div><div class="line">			System.<span class="keyword">out</span>.print(<span class="string">" "</span>+ c);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">class</span> <span class="title">Ba</span> <span class="title">extends</span> <span class="title">Ab</span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">g</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">char</span> cStart= <span class="string">'α'</span>, cEnd= <span class="string">'ω'</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">char</span> c= cStart; c&lt;= cEnd; c++)&#123;</div><div class="line">			System.<span class="keyword">out</span>.print(<span class="string">" "</span>+ c);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example5_9</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		Ba ba=<span class="keyword">new</span> Ba();</div><div class="line">		ba.k();</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">""</span>);</div><div class="line">		ba.g();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;写一个类Aa， 该类创建的对象可以调用方法k输出英文字母表，然后再编写一个该类的子类Bb，要求子类Bb必须继承Aa类的方法k(不允许重写)，子类创建的对象不仅可以调用方法k输出英文字母表，而且可以调用子类新增的方法g输出希腊字母表。&lt;/code&gt;&lt;/p&gt;
&lt;fi
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java连接MySQL数据库</title>
    <link href="http://yoursite.com/2017/10/29/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2017/10/29/Java连接MySQL数据库/</id>
    <published>2017-10-29T07:45:51.000Z</published>
    <updated>2017-11-09T08:36:44.414Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>工具：<br>eclipse<br>MySQL5.5<br>MySQL连接驱动：mysql-connector-java-5.1.44-bin.jar</p>
</blockquote>
<p>Java编译器是eclipse，下载<code>mysql-connector-java-5.1.44-bin.jar</code>，我下的是最新版。<br>加载驱动：<br>1、在工程目录中创建lib文件夹，将下载好的JDBC放到该文件夹下，如图所示：<img src="https://raw.githubusercontent.com/sunstady/hexo/d27213020770dfd56fd073dc33909d63192befa4/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/1.jpg" alt="lib"><br>2、右键工程名，点击Properties <img src="https://raw.githubusercontent.com/sunstady/hexo/0a3385c406e09a8466706d5ecd5b335a4a73d967/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/2.jpg" alt="properties"><br>选择Java Build Path中的Libraries，点击Add JARs…, 选择刚才添加的JDBC，如下图:<img src="https://raw.githubusercontent.com/sunstady/hexo/0a3385c406e09a8466706d5ecd5b335a4a73d967/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/3.jpg" alt="JDBC"><br>3、配置好MySQL，添加一个用户，用户名是style,密码是1234,  创建一个数据库, 数据库名是student。创建表：</p>
<blockquote>
<p>create table students(<br>    -&gt; sno int(10) not null,<br>    -&gt; sname varchar(8) not null,<br>    -&gt; sex char(2) not null,<br>    -&gt; bdate date not null,<br>    -&gt; height dec(5,2) default 000.00,<br>    -&gt; primary key(sno));</p>
</blockquote>
<p>然后插入一条数据：</p>
<blockquote>
<p>insert into students(sno,sname,sex,bdate,height) values(‘1’,’gfa’,’男’,’2017-10-29’,’fwef’);</p>
</blockquote>
<p>创建好数据库后, 编写Java文件来访问MySQL数据库。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> sqldemo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.sql.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> class mains &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</div><div class="line">        <span class="comment">//声明Connection对象</span></div><div class="line">        Connection con;</div><div class="line">        <span class="comment">//驱动程序名</span></div><div class="line">        <span class="keyword">String</span> driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</div><div class="line">        <span class="comment">//URL指向要访问的数据库名student</span></div><div class="line">        <span class="keyword">String</span> url = <span class="string">"jdbc:mysql://localhost:3306/student"</span>;</div><div class="line">        <span class="comment">//MySQL配置时的用户名</span></div><div class="line">        <span class="keyword">String</span> user = <span class="string">"style"</span>;</div><div class="line">        <span class="comment">//MySQL配置时的密码</span></div><div class="line">        <span class="keyword">String</span> password = <span class="string">"1234"</span>;</div><div class="line">        <span class="comment">//遍历查询结果集</span></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//加载驱动程序</span></div><div class="line">            Class.forName(driver);</div><div class="line">            <span class="comment">//1.getConnection()方法，连接MySQL数据库！！</span></div><div class="line">            con = DriverManager.getConnection(url,user,password);</div><div class="line">            <span class="keyword">if</span>(!con.isClosed())</div><div class="line">                System.out.<span class="built_in">println</span>(<span class="string">"Succeeded connecting to the Database!"</span>);</div><div class="line">            <span class="comment">//2.创建statement类对象，用来执行SQL语句！！</span></div><div class="line">            Statement statement = con.createStatement();</div><div class="line">            <span class="comment">//要执行的SQL语句</span></div><div class="line">            <span class="keyword">String</span> sql = <span class="string">"select * from students"</span>;</div><div class="line">            <span class="comment">//3.ResultSet类，用来存放获取的结果集！！</span></div><div class="line">            ResultSet rs = statement.executeQuery(sql);</div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);</div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"执行结果如下所示:"</span>);  </div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);  </div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"姓名"</span> + <span class="string">"\t"</span> + <span class="string">"性别"</span>);  </div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);  </div><div class="line">             </div><div class="line">            <span class="keyword">String</span> job = <span class="keyword">null</span>;</div><div class="line">            <span class="keyword">String</span> id = <span class="keyword">null</span>;</div><div class="line">            <span class="keyword">while</span>(rs.next())&#123;</div><div class="line">                <span class="comment">//获取stuname这列数据</span></div><div class="line">                job = rs.getString(<span class="string">"sname"</span>);</div><div class="line">                <span class="comment">//获取stuid这列数据</span></div><div class="line">                id = rs.getString(<span class="string">"sex"</span>);</div><div class="line">                <span class="comment">//输出结果</span></div><div class="line">                System.out.<span class="built_in">println</span>(job + <span class="string">"\t"</span> + id);</div><div class="line">            &#125;</div><div class="line">            rs.close();</div><div class="line">            con.close();</div><div class="line">        &#125; <span class="keyword">catch</span>(ClassNotFoundException e) &#123;   </div><div class="line">            <span class="comment">//数据库驱动类异常处理</span></div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"Sorry,can`t find the Driver!"</span>);   </div><div class="line">            e.printStackTrace();   </div><div class="line">            &#125; <span class="keyword">catch</span>(SQLException e) &#123;</div><div class="line">            <span class="comment">//数据库连接失败异常处理</span></div><div class="line">            e.printStackTrace();  </div><div class="line">            &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;<span class="keyword">finally</span>&#123;</div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"数据库数据获取成功！"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行结果如图所示：<br><img src="https://raw.githubusercontent.com/sunstady/hexo/0a3385c406e09a8466706d5ecd5b335a4a73d967/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/4.jpg" alt="结果"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;工具：&lt;br&gt;eclipse&lt;br&gt;MySQL5.5&lt;br&gt;MySQL连接驱动：mysql-connector-java-5.1.44-bin.jar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Java编译器是eclipse，下载&lt;code&gt;mys
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>txt文件导入MySQL</title>
    <link href="http://yoursite.com/2017/10/28/txt%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL/"/>
    <id>http://yoursite.com/2017/10/28/txt文件导入MySQL/</id>
    <published>2017-10-28T10:26:37.000Z</published>
    <updated>2017-10-28T10:40:26.396Z</updated>
    
    <content type="html"><![CDATA[<p><code>创建数据表</code></p>
<blockquote>
<p>CRETE TABLE tes(<br>NAME VARCHAR(20) NULL,<br>SEX VARCHAR(5) NULL,<br>STUDENTID INT(20) NULL);</p>
</blockquote>
<p><code>txt文件中的内容如下</code></p>
<blockquote>
<p>你好    男  123<br>世界    女  456<br>啦啦啦  男  485</p>
</blockquote>
<p>中间空格部分是<code>TAB</code>键, 保存为UTF-8编码.<br><code>导入txt文件</code></p>
<blockquote>
<p>load data local infile ‘C:/文件名.txt’ into table 数据表名;</p>
</blockquote>
<p>如果第一行开头出现特殊符号，我的解决方法是在第一行中增加一行可以删去的信息，等导入数据库后，<code>DELETE FROM 数据库表 WHERE 字段=&#39;字段对应的唯一信息&#39;;</code>删除第一行就行。<br>但这只是治标不治本，希望大家能提出宝贵的建议，共同学习。</p>
<p><code>导入数据库到MySQL</code></p>
<blockquote>
<p>mysql -u root -p &lt; 数据库文件名</p>
</blockquote>
<p>回车后输入数据库密码，即可导入成功。</p>
<p><code>导出数据库</code></p>
<blockquote>
<p>mysqldump -u  root -p 数据库名 &gt; 要保存的数据库文件名</p>
</blockquote>
<p>回车后输入数据库密码，导出的数据库在当前目录。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;创建数据表&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CRETE TABLE tes(&lt;br&gt;NAME VARCHAR(20) NULL,&lt;br&gt;SEX VARCHAR(5) NULL,&lt;br&gt;STUDENTID INT(20) NULL);&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>本地连接腾讯云MySQL</title>
    <link href="http://yoursite.com/2017/10/28/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E8%85%BE%E8%AE%AF%E4%BA%91MySQL/"/>
    <id>http://yoursite.com/2017/10/28/本地连接腾讯云MySQL/</id>
    <published>2017-10-28T03:33:35.000Z</published>
    <updated>2017-11-09T13:15:09.363Z</updated>
    
    <content type="html"><![CDATA[<p>在腾讯云的MySQL中先新建一个用户，用于远程登录账号。<br>环境是centos7<br><code>登录MySQL</code> </p>
<blockquote>
<p>mysql -u root -p 回车后输入密码</p>
</blockquote>
<p><code>创建用户</code></p>
<p>允许本地IP访问localhost</p>
<blockquote>
<p>create user ‘style’@’localhost’ identified by ‘123456’;</p>
</blockquote>
<p>用户名是<code>style</code>，密码是<code>123456</code>;</p>
<p><code>允许外网IP访问</code></p>
<blockquote>
<p>create user ‘style’@’%’ identified by ‘123456’;</p>
</blockquote>
<p><code>刷新授权</code></p>
<blockquote>
<p>flush privileges;</p>
</blockquote>
<p><code>为用户创建数据库</code></p>
<p>数据库名是<code>student</code></p>
<blockquote>
<p>create database student DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</p>
</blockquote>
<p><code>为新用户分配权限</code></p>
<p>授予用户通过外网IP对于该数据库的全部权限</p>
<blockquote>
<p>grant all privileges on <code>student</code>.* to ‘style’@’%’ identified by ‘1234’;</p>
</blockquote>
<p>授予用户在本地服务器对该数据库的全部权限</p>
<blockquote>
<p>grant all privileges on <code>student</code>.* to ‘style’@’localhost’ identified by ‘1234’;</p>
</blockquote>
<p><code>刷新权限</code></p>
<blockquote>
<p>flush privileges;</p>
</blockquote>
<p><code>退出root重新登录</code></p>
<blockquote>
<p>exit</p>
</blockquote>
<p>用新账号style重新登录，由于使用的是 % 任意IP连接， 所以需要指定外部访问IP</p>
<blockquote>
<p>mysql -h 腾讯云的公网IP -u用户名 -p密码</p>
</blockquote>
<p>登录成功！</p>
<p><code>查询用户权限</code></p>
<blockquote>
<p>show grants for style</p>
</blockquote>
<p><code>赋予权限</code></p>
<blockquote>
<p>grant all privileges on <em>.</em> to ‘style’@’%’ identified by ‘1234’;</p>
</blockquote>
<p>授予style用户在所有数据库上的所有权限</p>
<p>如果此时发现刚刚给的权限太大了，如果我们只想授予它在某个数据库上的权限，那么需要切换到root用户撤销刚才的权限，重新授权</p>
<blockquote>
<p>revoke all privileges on <em>.</em> from ‘style’@’%’;<br>grant all privileges on student.* to ‘style`@’%’ identified by ‘1234’;</p>
</blockquote>
<p>甚至还可以指定该用户只能执行select和update命令</p>
<blockquote>
<p>grant select, update on student.* to ‘style’@’%’ identified by ‘1234’;</p>
</blockquote>
<p>这样一来，再次以<code>style</code>用户登录MySQL，只有<code>student</code>数据库是对其可见的，并且如果你只授权它<code>select</code>权限，那么它就不能执行<code>delete</code>语句</p>
<p><code>每当调整权限后，通常需要执行以下语句来刷新权限</code></p>
<blockquote>
<p>flush privileges;</p>
</blockquote>
<p><code>删除创建的用户</code></p>
<blockquote>
<p>drop user style@’%’;</p>
</blockquote>
<p><code>可用如下命令查看相应用户及对应的host</code></p>
<blockquote>
<p>select host, user from user;</p>
</blockquote>
<p><code>MarkSown</code>语法用的不是很好，有些符号没有显示，以下图为准<br><img src="https://raw.githubusercontent.com/sunstady/hexo/880fb39c29ea64b39ebcdc2d810e866266f0ba2b/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/1.png" alt="MySQL用户"><br><img src="https://raw.githubusercontent.com/sunstady/hexo/880fb39c29ea64b39ebcdc2d810e866266f0ba2b/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/2.png" alt="MySQL用户"><br><img src="https://raw.githubusercontent.com/sunstady/hexo/880fb39c29ea64b39ebcdc2d810e866266f0ba2b/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/3.png" alt="MySQL用户"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在腾讯云的MySQL中先新建一个用户，用于远程登录账号。&lt;br&gt;环境是centos7&lt;br&gt;&lt;code&gt;登录MySQL&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mysql -u root -p 回车后输入密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;co
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>修改MySQL密码</title>
    <link href="http://yoursite.com/2017/10/27/%E4%BF%AE%E6%94%B9MySQL%E5%AF%86%E7%A0%81/"/>
    <id>http://yoursite.com/2017/10/27/修改MySQL密码/</id>
    <published>2017-10-27T12:46:46.000Z</published>
    <updated>2017-10-27T12:51:25.760Z</updated>
    
    <content type="html"><![CDATA[<p>在DOS下执行：<code>mysql -u root -p</code><br>然后输入旧的密码，如果是第一次进入，则直接回车<br>mysql&gt;<code>show databases;</code><br>mysql&gt;<code>use mysql;</code><br>注意一定先执行<code>use mysql;</code>再执行下面命令设置密码，如新密码123456<br>mysql&gt;<code>UPDATE user SET password=PASSWORD(&#39;123456&#39;) WHERE user=&#39;root&#39;;</code><br>mysql&gt;<code>FLUSH PRIVILEGES;</code><br>mysql&gt;<code>exit;</code></p>
<p>附上常用mysql命令(win8.1以管理员身份执行win+x+a):<br>安装mysql服务：<code>mysqld -install</code><br>卸载mysql服务：<code>mysqld -remove</code><br>启动mysql服务：<code>net start mysql</code><br>停止mysql服务：<code>net stop mysql</code></p>
<p>如果启动mysql服务出现1067错误码<br>尝试清理<code>datadir</code>目录下的以下文件：<code>auto.cnf</code>、<code>Cryhelyxx-pc.err</code>、<code>Cryhelyxx-pc.pid</code>、<code>ib_logfile0</code>、<code>ib_logfile1</code>、<code>ibdata1</code>、<code>ibtmp1</code><br>注意：在清理之前请备份好数据库，否则后果自负，并再次启动mysql服务：<code>net start mysql</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在DOS下执行：&lt;code&gt;mysql -u root -p&lt;/code&gt;&lt;br&gt;然后输入旧的密码，如果是第一次进入，则直接回车&lt;br&gt;mysql&amp;gt;&lt;code&gt;show databases;&lt;/code&gt;&lt;br&gt;mysql&amp;gt;&lt;code&gt;use mysql;&lt;/c
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 安装问题</title>
    <link href="http://yoursite.com/2017/10/10/Android-Studio-%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/10/10/Android-Studio-安装问题/</id>
    <published>2017-10-10T14:09:38.000Z</published>
    <updated>2017-10-10T14:15:41.045Z</updated>
    
    <content type="html"><![CDATA[<p>安装android studio的时候，出现几个错误，在此记录下。</p>
<p>第一个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa4606928d0bcc6e4/android%20studio/2.jpg" alt="First Run"><br><code>解决方法：</code>在自己的android studio安装目录下找到这个文件<code>idea.properties</code>,在最后面添加一行<code>disable.android.first.run=true</code></p>
<p>第二个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa4606928d0bcc6e4/android%20studio/3.jpg" alt="汉字">(图是百度的==当时没保存下来)<br><code>解决方法：</code>SDK的目录名称不能有汉字，换个路径</p>
<p>第三个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/9d4e725780e458c740289e8c420650457ba4c761/android%20studio/4.jpg" alt="out of date"><br><code>解决方法：</code>点击右下角的<code>Configure</code><img src="https://raw.githubusercontent.com/sunstady/hexo/62829847e40e333fe7e569ebc5a20c0ae8b5867f/android%20studio/5.jpg" alt="Configure">点击<code>project Defaults</code>,点击<code>Project Structure</code>,填入SDK的地址<img src="https://raw.githubusercontent.com/sunstady/hexo/f55e7eb2849820a93edd2b434d3c2f261bf0c46b/android%20studio/6.jpg" alt="sdk"></p>
<p>第四个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa4606928d0bcc6e4/android%20studio/1.jpg" alt="空格"><br><code>解决方法：</code>SDK的目录不能有空格，换路径</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装android studio的时候，出现几个错误，在此记录下。&lt;/p&gt;
&lt;p&gt;第一个是出现这个&lt;img src=&quot;https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa46069
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>super关键字</title>
    <link href="http://yoursite.com/2017/09/28/super%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://yoursite.com/2017/09/28/super关键字/</id>
    <published>2017-09-28T01:40:22.000Z</published>
    <updated>2017-09-28T01:48:25.002Z</updated>
    
    <content type="html"><![CDATA[<p><code>使用super调用父类的构造方法</code><br>子类不继承父类的构造方法，因此，子类如果想使用父类的构造方法，必须在子类的构造方法中使用，必须使用关键字super来表示，而且super必须是子类构造方法中的<code>头一条</code>语句<br><code>Student5_6.java</code><br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Student5_6 &#123;</div><div class="line">	<span class="built_in">int</span> <span class="keyword">number</span>;</div><div class="line">	String <span class="keyword">name</span>;</div><div class="line">	Student5_6()&#123;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	Student5_6(<span class="built_in">int</span> <span class="keyword">number</span>, String <span class="keyword">name</span>)&#123;</div><div class="line">		this.<span class="keyword">number</span>= <span class="keyword">number</span>;</div><div class="line">		this.<span class="keyword">name</span>= <span class="keyword">name</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">public</span> <span class="built_in">int</span> getNumber()&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">number</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">public</span> String getName() &#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">name</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>UniverStudent.java</code><br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">UniverStudent</span> <span class="keyword">extends</span> <span class="title">Student5_6</span> </span>&#123;</div><div class="line">	boolean isNarriage;<span class="comment">//子类新增的结婚属性</span></div><div class="line">	<span class="type">UniverStudent</span>(int number, <span class="type">String</span> name, boolean v)&#123;</div><div class="line">		<span class="keyword">super</span>(number, name);<span class="comment">//调用父类的构造方法</span></div><div class="line">	&#125;</div><div class="line">	public boolean getIsNarriage()&#123;</div><div class="line">		<span class="keyword">return</span> isNarriage;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>Example5_6.java</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example5_6</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		UniverStudent zhangStudent= <span class="keyword">new</span> UniverStudent(<span class="number">20111</span>, <span class="string">"张三"</span>, <span class="literal">false</span>);</div><div class="line">		<span class="keyword">int</span> number= zhangStudent.getNumber();</div><div class="line">		String name= zhangStudent.getName();</div><div class="line">		boolean marriage= zhangStudent.getIsNarriage();</div><div class="line">		System.<span class="keyword">out</span>.println(name+ <span class="string">"的学号是: "</span>+ number);</div><div class="line">		<span class="keyword">if</span>(marriage== <span class="literal">true</span>)&#123;</div><div class="line">			System.<span class="keyword">out</span>.println(name+ <span class="string">"已婚"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			System.<span class="keyword">out</span>.println(name+ <span class="string">"未婚"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>使用super操作被隐藏的成员变量和方法</code><br>如果在子类中想使用被子类隐藏的成员变量或方法，可以使用关键字super，super.x、super.play()，就是访问和调用被子类隐藏的成员变量x和方法play()<br><code>Sum.java</code><br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sum</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">double</span> f()&#123;</div><div class="line">		<span class="keyword">double</span> <span class="keyword">sum</span>= <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">1</span>; i&lt;= n;i++)&#123;</div><div class="line">			<span class="keyword">sum</span>= <span class="keyword">sum</span>+ i;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">sum</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>Average.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Average</span> <span class="keyword">extends</span> <span class="title">Sum</span> </span>&#123;</div><div class="line">	<span class="keyword">double</span> nm;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">fq</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">double</span> c;</div><div class="line">		<span class="keyword">super</span>.n= (<span class="keyword">int</span>)nm;</div><div class="line">		c= <span class="keyword">super</span>.f();</div><div class="line">		<span class="keyword">return</span> c+ nm;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">g</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">double</span> c;</div><div class="line">		c= <span class="keyword">super</span>.f();</div><div class="line">		<span class="keyword">return</span> c- nm;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>Example5_7.java</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example5_7</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		Average average= <span class="keyword">new</span> Average();</div><div class="line">		average.nm= <span class="number">100.5678</span>;</div><div class="line">		<span class="keyword">double</span> result1= average.fq();</div><div class="line">		<span class="keyword">double</span> result2= average.g();</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">"result1= "</span>+ result1);</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">"result2= "</span>+ result2);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;使用super调用父类的构造方法&lt;/code&gt;&lt;br&gt;子类不继承父类的构造方法，因此，子类如果想使用父类的构造方法，必须在子类的构造方法中使用，必须使用关键字super来表示，而且super必须是子类构造方法中的&lt;code&gt;头一条&lt;/code&gt;语句&lt;br&gt;&lt;co
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
</feed>
