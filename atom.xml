<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sanstyle</title>
  <subtitle>功有所不全 才有所不任 力有所不足</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-13T05:51:46.744Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>MC</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>虚拟存储器</title>
    <link href="http://yoursite.com/2017/11/12/%E8%99%9A%E6%8B%9F%E5%AD%98%E5%82%A8%E5%99%A8/"/>
    <id>http://yoursite.com/2017/11/12/虚拟存储器/</id>
    <published>2017-11-12T13:24:14.000Z</published>
    <updated>2017-11-13T05:51:46.744Z</updated>
    
    <content type="html"><![CDATA[<p><code>1、什么是虚拟存储器？（虚存）</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">解答：虚拟存储器是由硬件和操作系统自动实现存储信息调度和管理的，是在具有层次结构存储器的计算机系统中，自动实现部分装入和部分替换功能，能从逻辑上为用户提供一个比物理贮存容量大的多，可寻址的“主存储器”。</div></pre></td></tr></table></figure></p>
<p><code>2、为什么要引入虚拟存储器？</code><br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">解答：<span class="number">1</span>&gt;能提高操作系统的内存利用率和系统吞吐量 </div><div class="line"><span class="number">2</span>&gt;在计算机系统中，主存的容量有一定的限制，不可能大大满足各种用户的需要，而在技术上辅助存储器却可以做的相当大。为了给大作业提供方便，使它们不再承担对主存和辅存的具体分配和管理工作，而由操作系统把主存和辅存统一管理起来。</div></pre></td></tr></table></figure></p>
<p><code>3、虚拟存储器的特征？</code><br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">解答：虚拟存储器具有虚拟性、离散性、多次性及强对换性等特征，其中最重要的特征是虚拟性。</div><div class="line"><span class="meta">1&gt;</span><span class="bash">	虚拟性。虚拟性是指能够从逻辑上扩充内存容量，使用户所看到的内存容量远大于实际的内存容量，这是虚拟存储器所表现出的最重要的特征，也是虚拟存储器最重要的目标。</span></div><div class="line"><span class="meta">2&gt;</span><span class="bash">	离散性。离散性是指内存分配时采用离散分配的方式，没有离散性就不可能实现虚拟存储器。采用连续分配方式，需要将作业装入到连续的内存区域，这样需要连续地一次性申请一部分内存空间，以便将整个作业先后多次装入内存。如果仍然采用连续装入的方式，则无法实现虚拟存储功能，只有采用离散分配方式，才能为它申请内存空间，以避免浪费内存空间。</span></div><div class="line"><span class="meta">3&gt;</span><span class="bash">	多次性。多次性是指一个作业被分成多次调入内存运行。作业在运行时，只将当前运行的那部分程序和数据装入内存，以后再陆续从外存将需要的部分调入内存。</span></div><div class="line"><span class="meta">4&gt;</span><span class="bash">	对换性。对换性是指允许在作业运行过程中换进换出。允许将暂时不用的程序和数据从内存调至外存的对换区，以后需要时再从外存调入到内存。</span></div></pre></td></tr></table></figure></p>
<p><code>4、虚存可以建立在分区分配管理的基础上吗？为什么？</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">解答：不可以。在虚拟存储器中，允许将一个作业分多次调入内存。入宫采用连续分配方式时，应将作业装入一个连续的内存区域中。为此，需事先为它一次性地申请足够的内存空间，以便将整个作业先后分多次装入内存，这不仅会使相当一部分内存空间都处于暂时或“永久”的空闲状态，造成内存资源的严重浪费，而且也无法从逻辑上扩大内存容量。因此，虚拟存储器的实现都是建立在离散分配存储管理方式的基础上。</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;1、什么是虚拟存储器？（虚存）&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;t
    
    </summary>
    
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>人生苦短</title>
    <link href="http://yoursite.com/2017/11/10/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/"/>
    <id>http://yoursite.com/2017/11/10/人生苦短/</id>
    <published>2017-11-10T12:53:06.000Z</published>
    <updated>2017-11-10T12:53:36.891Z</updated>
    
    <content type="html"><![CDATA[<p>用Wireshark打开这个流量包<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/1.png" alt="Wireshark"><br>点文件中的导出对象，选HTTP，发现其中有如下文件<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/2.png" alt="flag"><br>在010编辑器中打开，发现flagaa中有压缩包的头部，flagaf中有压缩包的尾部，猜测应该是压缩包分解成aa-af，拼凑一下，导出压缩包<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/3.png" alt="压缩包"><br>解压此压缩包，发现有密码<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/4.png" alt="密码"><br>先尝试用<code>Ziperello</code>爆破下<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/5.png" alt="Ziperello"><br>没有加密文件，发现它是伪加密<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/6.png" alt="ZipCenOp"><br>压缩包打开，得flag<br><img src="https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9F%E8%8B%A6%E7%9F%AD/7.png" alt="flag"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;用Wireshark打开这个流量包&lt;br&gt;&lt;img src=&quot;https://raw.githubusercontent.com/sunstady/hexo/d1e65759b8c210f00de1599ec070607f9976824c/%E4%BA%BA%E7%94%9
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>RGB</title>
    <link href="http://yoursite.com/2017/11/10/RGB/"/>
    <id>http://yoursite.com/2017/11/10/RGB/</id>
    <published>2017-11-10T12:26:17.000Z</published>
    <updated>2017-11-10T12:27:03.149Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="built_in">from</span> PIL import Image</div><div class="line">MAX = <span class="number">280</span></div><div class="line">pic = Image.<span class="built_in">new</span>(<span class="string">"RGB"</span>,(MAX, MAX))</div><div class="line"><span class="built_in">file</span> = <span class="built_in">open</span>(<span class="string">"flag.txt"</span>,<span class="string">'r'</span>)</div><div class="line">m = <span class="built_in">file</span>.<span class="built_in">read</span>().<span class="built_in">split</span>(<span class="string">'\n'</span>)</div><div class="line">i=<span class="number">0</span></div><div class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</div><div class="line">   <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</div><div class="line">       <span class="keyword">if</span>(m[i] == <span class="string">'(0, 0, 0)'</span>):</div><div class="line">           pic.putpixel([x,y],(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</div><div class="line">       <span class="keyword">else</span>:</div><div class="line">           pic.putpixel([x,y],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</div><div class="line">       i = i+<span class="number">1</span></div><div class="line">pic.show()</div><div class="line">pic.save(<span class="string">"flag.png"</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight livecodeserver&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;li
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>base混合加密</title>
    <link href="http://yoursite.com/2017/11/10/base%E6%B7%B7%E5%90%88%E5%8A%A0%E5%AF%86/"/>
    <id>http://yoursite.com/2017/11/10/base混合加密/</id>
    <published>2017-11-10T12:11:44.000Z</published>
    <updated>2017-11-10T12:12:16.987Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">import base64</div><div class="line"><span class="keyword">file</span> = <span class="keyword">open</span>(<span class="string">'base.txt'</span>,<span class="string">'r'</span>)</div><div class="line"><span class="keyword">st</span> = <span class="keyword">file</span>.<span class="keyword">read</span>()</div><div class="line"><span class="keyword">while</span> True:</div><div class="line">   <span class="keyword">try</span>:</div><div class="line">       <span class="keyword">st</span> = base64.b16decode(<span class="keyword">st</span>)</div><div class="line">   excep<span class="variable">t:</span></div><div class="line">       <span class="keyword">try</span>:</div><div class="line">           <span class="keyword">st</span> = base64.b32decode(<span class="keyword">st</span>)</div><div class="line">       excep<span class="variable">t:</span></div><div class="line">           <span class="keyword">st</span> = base64.b64decode(<span class="keyword">st</span>)</div><div class="line">   <span class="keyword">if</span>(<span class="keyword">st</span>.<span class="keyword">find</span>(<span class="string">'flag'</span>) == <span class="number">0</span>):</div><div class="line">       <span class="keyword">print</span>(<span class="keyword">st</span>)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>VMware Workstation 14黑屏问题及密钥</title>
    <link href="http://yoursite.com/2017/11/08/VMware-Workstation-14%E9%BB%91%E5%B1%8F%E9%97%AE%E9%A2%98%E5%8F%8A%E5%AF%86%E9%92%A5/"/>
    <id>http://yoursite.com/2017/11/08/VMware-Workstation-14黑屏问题及密钥/</id>
    <published>2017-11-08T11:16:42.000Z</published>
    <updated>2017-11-08T11:17:10.892Z</updated>
    
    <content type="html"><![CDATA[<p>今儿个升级VM到14，完事后打开VM，想用下kali，却发现进入黑屏，如论如何都不能解决，没办法，拜访了下度娘。<br>首先上VM的密钥：<br>VMware Workstation Pro 14 许可证序列号：<br><code>FF590-2DX83-M81LZ-XDM7E-MKUT4</code><br><code>CG54H-D8D0H-H8DHY-C6X7X-N2KG6</code><br><code>ZC3WK-AFXEK-488JP-A7MQX-XL8YF</code><br><code>AC5XK-0ZD4H-088HP-9NQZV-ZG2R4</code><br><code>ZC5XK-A6E0M-080XQ-04ZZG-YF08D</code><br><code>ZY5H0-D3Y8K-M89EZ-AYPEG-MYUA8</code></p>
<p>黑屏问题解决:<br><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">以管理员身份进入cmd，输入`netsh winsock reset`, 重启，问题解决</div></pre></td></tr></table></figure></p>
<p>网上也有其他的解决方法，不过没试过：<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">以管理员身份运行命令提示符（<span class="keyword">cmd</span>.<span class="bash">exe），输入命令 netsh winsock show catalog</span></div><div class="line"><span class="bash">可以看到VMware注册了两个LSP：vSockets DGRAM、vSockets STREAM，路径是%windir%\system32\vsocklib.dll</span></div><div class="line"><span class="bash">观察有没有其他模块也注册了vSockets DGRAM、vSockets STREAM，如果有，就卸载掉这个模块所属的软件。</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今儿个升级VM到14，完事后打开VM，想用下kali，却发现进入黑屏，如论如何都不能解决，没办法，拜访了下度娘。&lt;br&gt;首先上VM的密钥：&lt;br&gt;VMware Workstation Pro 14 许可证序列号：&lt;br&gt;&lt;code&gt;FF590-2DX83-M81LZ-XDM
    
    </summary>
    
    
      <category term="软件" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Example5_10</title>
    <link href="http://yoursite.com/2017/10/31/Example5-10/"/>
    <id>http://yoursite.com/2017/10/31/Example5-10/</id>
    <published>2017-10-31T02:57:00.000Z</published>
    <updated>2017-10-31T02:57:41.527Z</updated>
    
    <content type="html"><![CDATA[<p><code>写一个类，该类有一个方法，public int ff(int a, int b), 该方法返回a 和b 的最大公约数。然后再编写一个该类的子类，要求子类重写方法ff，而且重写的方法将返回a 和b 的最小公约数；要求在重写的方法的方法体中首先调用被隐藏的方法返回a 和b 的最大公约数m ，然后将乘积(a* b)/ m返回；要求在应用的程序的主类中分别使用父类和子类创建对象，并分别调用方法f 计算两个正整数的最大公约数和最小公约数。</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">AAb</span></span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">		<span class="keyword">if</span>(b&lt; a)&#123;</div><div class="line">			<span class="keyword">int</span> temp= <span class="number">0</span>;</div><div class="line">			temp= a;</div><div class="line">			a= b;</div><div class="line">			b= temp;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">int</span> r= b% a;</div><div class="line">		<span class="keyword">while</span>(r!= <span class="number">0</span>)&#123;</div><div class="line">			b= a;</div><div class="line">			a= r;</div><div class="line">			r= b% a;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> a;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">BBb</span> <span class="keyword">extends</span> <span class="title">AAb</span></span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">f</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</div><div class="line">		<span class="keyword">int</span> division= <span class="keyword">super</span>.f(a, b);</div><div class="line">		<span class="keyword">return</span> (a* b)/ division;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Example5_10</span> </span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">		AAb aAb= <span class="keyword">new</span> AAb();</div><div class="line">		BBb bBb= <span class="keyword">new</span> BBb();</div><div class="line">		System.out.println(<span class="string">"最大公约数: "</span>+ aAb.f(<span class="number">36</span>, <span class="number">24</span>));</div><div class="line">		System.out.println(<span class="string">"最小公倍数: "</span>+ bBb.f(<span class="number">36</span>, <span class="number">24</span>));</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;写一个类，该类有一个方法，public int ff(int a, int b), 该方法返回a 和b 的最大公约数。然后再编写一个该类的子类，要求子类重写方法ff，而且重写的方法将返回a 和b 的最小公约数；要求在重写的方法的方法体中首先调用被隐藏的方法返回a
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Example5_9</title>
    <link href="http://yoursite.com/2017/10/31/Example5-9/"/>
    <id>http://yoursite.com/2017/10/31/Example5-9/</id>
    <published>2017-10-31T02:22:01.000Z</published>
    <updated>2017-10-31T02:22:31.889Z</updated>
    
    <content type="html"><![CDATA[<p><code>写一个类Aa， 该类创建的对象可以调用方法k输出英文字母表，然后再编写一个该类的子类Bb，要求子类Bb必须继承Aa类的方法k(不允许重写)，子类创建的对象不仅可以调用方法k输出英文字母表，而且可以调用子类新增的方法g输出希腊字母表。</code></p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">Ab</span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> final <span class="keyword">void</span> <span class="title">k</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">char</span> cStart= <span class="string">'a'</span>, cEnd= <span class="string">'z'</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">char</span> c= cStart; c&lt;= cEnd; c++)&#123;</div><div class="line">			System.<span class="keyword">out</span>.print(<span class="string">" "</span>+ c);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">class</span> <span class="title">Ba</span> <span class="title">extends</span> <span class="title">Ab</span>&#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">g</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">char</span> cStart= <span class="string">'α'</span>, cEnd= <span class="string">'ω'</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">char</span> c= cStart; c&lt;= cEnd; c++)&#123;</div><div class="line">			System.<span class="keyword">out</span>.print(<span class="string">" "</span>+ c);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example5_9</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		Ba ba=<span class="keyword">new</span> Ba();</div><div class="line">		ba.k();</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">""</span>);</div><div class="line">		ba.g();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;写一个类Aa， 该类创建的对象可以调用方法k输出英文字母表，然后再编写一个该类的子类Bb，要求子类Bb必须继承Aa类的方法k(不允许重写)，子类创建的对象不仅可以调用方法k输出英文字母表，而且可以调用子类新增的方法g输出希腊字母表。&lt;/code&gt;&lt;/p&gt;
&lt;fi
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Java连接MySQL数据库</title>
    <link href="http://yoursite.com/2017/10/29/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://yoursite.com/2017/10/29/Java连接MySQL数据库/</id>
    <published>2017-10-29T07:45:51.000Z</published>
    <updated>2017-11-09T08:36:44.414Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>工具：<br>eclipse<br>MySQL5.5<br>MySQL连接驱动：mysql-connector-java-5.1.44-bin.jar</p>
</blockquote>
<p>Java编译器是eclipse，下载<code>mysql-connector-java-5.1.44-bin.jar</code>，我下的是最新版。<br>加载驱动：<br>1、在工程目录中创建lib文件夹，将下载好的JDBC放到该文件夹下，如图所示：<img src="https://raw.githubusercontent.com/sunstady/hexo/d27213020770dfd56fd073dc33909d63192befa4/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/1.jpg" alt="lib"><br>2、右键工程名，点击Properties <img src="https://raw.githubusercontent.com/sunstady/hexo/0a3385c406e09a8466706d5ecd5b335a4a73d967/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/2.jpg" alt="properties"><br>选择Java Build Path中的Libraries，点击Add JARs…, 选择刚才添加的JDBC，如下图:<img src="https://raw.githubusercontent.com/sunstady/hexo/0a3385c406e09a8466706d5ecd5b335a4a73d967/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/3.jpg" alt="JDBC"><br>3、配置好MySQL，添加一个用户，用户名是style,密码是1234,  创建一个数据库, 数据库名是student。创建表：</p>
<blockquote>
<p>create table students(<br>    -&gt; sno int(10) not null,<br>    -&gt; sname varchar(8) not null,<br>    -&gt; sex char(2) not null,<br>    -&gt; bdate date not null,<br>    -&gt; height dec(5,2) default 000.00,<br>    -&gt; primary key(sno));</p>
</blockquote>
<p>然后插入一条数据：</p>
<blockquote>
<p>insert into students(sno,sname,sex,bdate,height) values(‘1’,’gfa’,’男’,’2017-10-29’,’fwef’);</p>
</blockquote>
<p>创建好数据库后, 编写Java文件来访问MySQL数据库。<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> sqldemo;</div><div class="line"></div><div class="line"><span class="keyword">import</span> java.sql.*;</div><div class="line"></div><div class="line"><span class="keyword">public</span> class mains &#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span>[] args) &#123;</div><div class="line">        <span class="comment">//声明Connection对象</span></div><div class="line">        Connection con;</div><div class="line">        <span class="comment">//驱动程序名</span></div><div class="line">        <span class="keyword">String</span> driver = <span class="string">"com.mysql.jdbc.Driver"</span>;</div><div class="line">        <span class="comment">//URL指向要访问的数据库名student</span></div><div class="line">        <span class="keyword">String</span> url = <span class="string">"jdbc:mysql://localhost:3306/student"</span>;</div><div class="line">        <span class="comment">//MySQL配置时的用户名</span></div><div class="line">        <span class="keyword">String</span> user = <span class="string">"style"</span>;</div><div class="line">        <span class="comment">//MySQL配置时的密码</span></div><div class="line">        <span class="keyword">String</span> password = <span class="string">"1234"</span>;</div><div class="line">        <span class="comment">//遍历查询结果集</span></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">//加载驱动程序</span></div><div class="line">            Class.forName(driver);</div><div class="line">            <span class="comment">//1.getConnection()方法，连接MySQL数据库！！</span></div><div class="line">            con = DriverManager.getConnection(url,user,password);</div><div class="line">            <span class="keyword">if</span>(!con.isClosed())</div><div class="line">                System.out.<span class="built_in">println</span>(<span class="string">"Succeeded connecting to the Database!"</span>);</div><div class="line">            <span class="comment">//2.创建statement类对象，用来执行SQL语句！！</span></div><div class="line">            Statement statement = con.createStatement();</div><div class="line">            <span class="comment">//要执行的SQL语句</span></div><div class="line">            <span class="keyword">String</span> sql = <span class="string">"select * from students"</span>;</div><div class="line">            <span class="comment">//3.ResultSet类，用来存放获取的结果集！！</span></div><div class="line">            ResultSet rs = statement.executeQuery(sql);</div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);</div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"执行结果如下所示:"</span>);  </div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);  </div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"姓名"</span> + <span class="string">"\t"</span> + <span class="string">"性别"</span>);  </div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"-----------------"</span>);  </div><div class="line">             </div><div class="line">            <span class="keyword">String</span> job = <span class="keyword">null</span>;</div><div class="line">            <span class="keyword">String</span> id = <span class="keyword">null</span>;</div><div class="line">            <span class="keyword">while</span>(rs.next())&#123;</div><div class="line">                <span class="comment">//获取stuname这列数据</span></div><div class="line">                job = rs.getString(<span class="string">"sname"</span>);</div><div class="line">                <span class="comment">//获取stuid这列数据</span></div><div class="line">                id = rs.getString(<span class="string">"sex"</span>);</div><div class="line">                <span class="comment">//输出结果</span></div><div class="line">                System.out.<span class="built_in">println</span>(job + <span class="string">"\t"</span> + id);</div><div class="line">            &#125;</div><div class="line">            rs.close();</div><div class="line">            con.close();</div><div class="line">        &#125; <span class="keyword">catch</span>(ClassNotFoundException e) &#123;   </div><div class="line">            <span class="comment">//数据库驱动类异常处理</span></div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"Sorry,can`t find the Driver!"</span>);   </div><div class="line">            e.printStackTrace();   </div><div class="line">            &#125; <span class="keyword">catch</span>(SQLException e) &#123;</div><div class="line">            <span class="comment">//数据库连接失败异常处理</span></div><div class="line">            e.printStackTrace();  </div><div class="line">            &#125;<span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;<span class="keyword">finally</span>&#123;</div><div class="line">            System.out.<span class="built_in">println</span>(<span class="string">"数据库数据获取成功！"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>运行结果如图所示：<br><img src="https://raw.githubusercontent.com/sunstady/hexo/0a3385c406e09a8466706d5ecd5b335a4a73d967/Java%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/4.jpg" alt="结果"></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;工具：&lt;br&gt;eclipse&lt;br&gt;MySQL5.5&lt;br&gt;MySQL连接驱动：mysql-connector-java-5.1.44-bin.jar&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Java编译器是eclipse，下载&lt;code&gt;mys
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>txt文件导入MySQL</title>
    <link href="http://yoursite.com/2017/10/28/txt%E6%96%87%E4%BB%B6%E5%AF%BC%E5%85%A5MySQL/"/>
    <id>http://yoursite.com/2017/10/28/txt文件导入MySQL/</id>
    <published>2017-10-28T10:26:37.000Z</published>
    <updated>2017-10-28T10:40:26.396Z</updated>
    
    <content type="html"><![CDATA[<p><code>创建数据表</code></p>
<blockquote>
<p>CRETE TABLE tes(<br>NAME VARCHAR(20) NULL,<br>SEX VARCHAR(5) NULL,<br>STUDENTID INT(20) NULL);</p>
</blockquote>
<p><code>txt文件中的内容如下</code></p>
<blockquote>
<p>你好    男  123<br>世界    女  456<br>啦啦啦  男  485</p>
</blockquote>
<p>中间空格部分是<code>TAB</code>键, 保存为UTF-8编码.<br><code>导入txt文件</code></p>
<blockquote>
<p>load data local infile ‘C:/文件名.txt’ into table 数据表名;</p>
</blockquote>
<p>如果第一行开头出现特殊符号，我的解决方法是在第一行中增加一行可以删去的信息，等导入数据库后，<code>DELETE FROM 数据库表 WHERE 字段=&#39;字段对应的唯一信息&#39;;</code>删除第一行就行。<br>但这只是治标不治本，希望大家能提出宝贵的建议，共同学习。</p>
<p><code>导入数据库到MySQL</code></p>
<blockquote>
<p>mysql -u root -p &lt; 数据库文件名</p>
</blockquote>
<p>回车后输入数据库密码，即可导入成功。</p>
<p><code>导出数据库</code></p>
<blockquote>
<p>mysqldump -u  root -p 数据库名 &gt; 要保存的数据库文件名</p>
</blockquote>
<p>回车后输入数据库密码，导出的数据库在当前目录。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;创建数据表&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CRETE TABLE tes(&lt;br&gt;NAME VARCHAR(20) NULL,&lt;br&gt;SEX VARCHAR(5) NULL,&lt;br&gt;STUDENTID INT(20) NULL);&lt;/p&gt;
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>本地连接腾讯云MySQL</title>
    <link href="http://yoursite.com/2017/10/28/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E8%85%BE%E8%AE%AF%E4%BA%91MySQL/"/>
    <id>http://yoursite.com/2017/10/28/本地连接腾讯云MySQL/</id>
    <published>2017-10-28T03:33:35.000Z</published>
    <updated>2017-11-09T13:15:09.363Z</updated>
    
    <content type="html"><![CDATA[<p>在腾讯云的MySQL中先新建一个用户，用于远程登录账号。<br>环境是centos7<br><code>登录MySQL</code> </p>
<blockquote>
<p>mysql -u root -p 回车后输入密码</p>
</blockquote>
<p><code>创建用户</code></p>
<p>允许本地IP访问localhost</p>
<blockquote>
<p>create user ‘style’@’localhost’ identified by ‘123456’;</p>
</blockquote>
<p>用户名是<code>style</code>，密码是<code>123456</code>;</p>
<p><code>允许外网IP访问</code></p>
<blockquote>
<p>create user ‘style’@’%’ identified by ‘123456’;</p>
</blockquote>
<p><code>刷新授权</code></p>
<blockquote>
<p>flush privileges;</p>
</blockquote>
<p><code>为用户创建数据库</code></p>
<p>数据库名是<code>student</code></p>
<blockquote>
<p>create database student DEFAULT CHARSET utf8 COLLATE utf8_general_ci;</p>
</blockquote>
<p><code>为新用户分配权限</code></p>
<p>授予用户通过外网IP对于该数据库的全部权限</p>
<blockquote>
<p>grant all privileges on <code>student</code>.* to ‘style’@’%’ identified by ‘1234’;</p>
</blockquote>
<p>授予用户在本地服务器对该数据库的全部权限</p>
<blockquote>
<p>grant all privileges on <code>student</code>.* to ‘style’@’localhost’ identified by ‘1234’;</p>
</blockquote>
<p><code>刷新权限</code></p>
<blockquote>
<p>flush privileges;</p>
</blockquote>
<p><code>退出root重新登录</code></p>
<blockquote>
<p>exit</p>
</blockquote>
<p>用新账号style重新登录，由于使用的是 % 任意IP连接， 所以需要指定外部访问IP</p>
<blockquote>
<p>mysql -h 腾讯云的公网IP -u用户名 -p密码</p>
</blockquote>
<p>登录成功！</p>
<p><code>查询用户权限</code></p>
<blockquote>
<p>show grants for style</p>
</blockquote>
<p><code>赋予权限</code></p>
<blockquote>
<p>grant all privileges on <em>.</em> to ‘style’@’%’ identified by ‘1234’;</p>
</blockquote>
<p>授予style用户在所有数据库上的所有权限</p>
<p>如果此时发现刚刚给的权限太大了，如果我们只想授予它在某个数据库上的权限，那么需要切换到root用户撤销刚才的权限，重新授权</p>
<blockquote>
<p>revoke all privileges on <em>.</em> from ‘style’@’%’;<br>grant all privileges on student.* to ‘style`@’%’ identified by ‘1234’;</p>
</blockquote>
<p>甚至还可以指定该用户只能执行select和update命令</p>
<blockquote>
<p>grant select, update on student.* to ‘style’@’%’ identified by ‘1234’;</p>
</blockquote>
<p>这样一来，再次以<code>style</code>用户登录MySQL，只有<code>student</code>数据库是对其可见的，并且如果你只授权它<code>select</code>权限，那么它就不能执行<code>delete</code>语句</p>
<p><code>每当调整权限后，通常需要执行以下语句来刷新权限</code></p>
<blockquote>
<p>flush privileges;</p>
</blockquote>
<p><code>删除创建的用户</code></p>
<blockquote>
<p>drop user style@’%’;</p>
</blockquote>
<p><code>可用如下命令查看相应用户及对应的host</code></p>
<blockquote>
<p>select host, user from user;</p>
</blockquote>
<p><code>MarkSown</code>语法用的不是很好，有些符号没有显示，以下图为准<br><img src="https://raw.githubusercontent.com/sunstady/hexo/880fb39c29ea64b39ebcdc2d810e866266f0ba2b/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/1.png" alt="MySQL用户"><br><img src="https://raw.githubusercontent.com/sunstady/hexo/880fb39c29ea64b39ebcdc2d810e866266f0ba2b/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/2.png" alt="MySQL用户"><br><img src="https://raw.githubusercontent.com/sunstady/hexo/880fb39c29ea64b39ebcdc2d810e866266f0ba2b/%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5%E6%95%B0%E6%8D%AE%E5%BA%93/3.png" alt="MySQL用户"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在腾讯云的MySQL中先新建一个用户，用于远程登录账号。&lt;br&gt;环境是centos7&lt;br&gt;&lt;code&gt;登录MySQL&lt;/code&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;mysql -u root -p 回车后输入密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;co
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>修改MySQL密码</title>
    <link href="http://yoursite.com/2017/10/27/%E4%BF%AE%E6%94%B9MySQL%E5%AF%86%E7%A0%81/"/>
    <id>http://yoursite.com/2017/10/27/修改MySQL密码/</id>
    <published>2017-10-27T12:46:46.000Z</published>
    <updated>2017-10-27T12:51:25.760Z</updated>
    
    <content type="html"><![CDATA[<p>在DOS下执行：<code>mysql -u root -p</code><br>然后输入旧的密码，如果是第一次进入，则直接回车<br>mysql&gt;<code>show databases;</code><br>mysql&gt;<code>use mysql;</code><br>注意一定先执行<code>use mysql;</code>再执行下面命令设置密码，如新密码123456<br>mysql&gt;<code>UPDATE user SET password=PASSWORD(&#39;123456&#39;) WHERE user=&#39;root&#39;;</code><br>mysql&gt;<code>FLUSH PRIVILEGES;</code><br>mysql&gt;<code>exit;</code></p>
<p>附上常用mysql命令(win8.1以管理员身份执行win+x+a):<br>安装mysql服务：<code>mysqld -install</code><br>卸载mysql服务：<code>mysqld -remove</code><br>启动mysql服务：<code>net start mysql</code><br>停止mysql服务：<code>net stop mysql</code></p>
<p>如果启动mysql服务出现1067错误码<br>尝试清理<code>datadir</code>目录下的以下文件：<code>auto.cnf</code>、<code>Cryhelyxx-pc.err</code>、<code>Cryhelyxx-pc.pid</code>、<code>ib_logfile0</code>、<code>ib_logfile1</code>、<code>ibdata1</code>、<code>ibtmp1</code><br>注意：在清理之前请备份好数据库，否则后果自负，并再次启动mysql服务：<code>net start mysql</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在DOS下执行：&lt;code&gt;mysql -u root -p&lt;/code&gt;&lt;br&gt;然后输入旧的密码，如果是第一次进入，则直接回车&lt;br&gt;mysql&amp;gt;&lt;code&gt;show databases;&lt;/code&gt;&lt;br&gt;mysql&amp;gt;&lt;code&gt;use mysql;&lt;/c
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Android Studio 安装问题</title>
    <link href="http://yoursite.com/2017/10/10/Android-Studio-%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/10/10/Android-Studio-安装问题/</id>
    <published>2017-10-10T14:09:38.000Z</published>
    <updated>2017-10-10T14:15:41.045Z</updated>
    
    <content type="html"><![CDATA[<p>安装android studio的时候，出现几个错误，在此记录下。</p>
<p>第一个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa4606928d0bcc6e4/android%20studio/2.jpg" alt="First Run"><br><code>解决方法：</code>在自己的android studio安装目录下找到这个文件<code>idea.properties</code>,在最后面添加一行<code>disable.android.first.run=true</code></p>
<p>第二个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa4606928d0bcc6e4/android%20studio/3.jpg" alt="汉字">(图是百度的==当时没保存下来)<br><code>解决方法：</code>SDK的目录名称不能有汉字，换个路径</p>
<p>第三个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/9d4e725780e458c740289e8c420650457ba4c761/android%20studio/4.jpg" alt="out of date"><br><code>解决方法：</code>点击右下角的<code>Configure</code><img src="https://raw.githubusercontent.com/sunstady/hexo/62829847e40e333fe7e569ebc5a20c0ae8b5867f/android%20studio/5.jpg" alt="Configure">点击<code>project Defaults</code>,点击<code>Project Structure</code>,填入SDK的地址<img src="https://raw.githubusercontent.com/sunstady/hexo/f55e7eb2849820a93edd2b434d3c2f261bf0c46b/android%20studio/6.jpg" alt="sdk"></p>
<p>第四个是出现这个<img src="https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa4606928d0bcc6e4/android%20studio/1.jpg" alt="空格"><br><code>解决方法：</code>SDK的目录不能有空格，换路径</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安装android studio的时候，出现几个错误，在此记录下。&lt;/p&gt;
&lt;p&gt;第一个是出现这个&lt;img src=&quot;https://raw.githubusercontent.com/sunstady/hexo/3f242cc9eb519692028ee68fa46069
    
    </summary>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>super关键字</title>
    <link href="http://yoursite.com/2017/09/28/super%E5%85%B3%E9%94%AE%E5%AD%97/"/>
    <id>http://yoursite.com/2017/09/28/super关键字/</id>
    <published>2017-09-28T01:40:22.000Z</published>
    <updated>2017-09-28T01:48:25.002Z</updated>
    
    <content type="html"><![CDATA[<p><code>使用super调用父类的构造方法</code><br>子类不继承父类的构造方法，因此，子类如果想使用父类的构造方法，必须在子类的构造方法中使用，必须使用关键字super来表示，而且super必须是子类构造方法中的<code>头一条</code>语句<br><code>Student5_6.java</code><br><figure class="highlight fortran"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> Student5_6 &#123;</div><div class="line">	<span class="built_in">int</span> <span class="keyword">number</span>;</div><div class="line">	String <span class="keyword">name</span>;</div><div class="line">	Student5_6()&#123;</div><div class="line">		</div><div class="line">	&#125;</div><div class="line">	Student5_6(<span class="built_in">int</span> <span class="keyword">number</span>, String <span class="keyword">name</span>)&#123;</div><div class="line">		this.<span class="keyword">number</span>= <span class="keyword">number</span>;</div><div class="line">		this.<span class="keyword">name</span>= <span class="keyword">name</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">public</span> <span class="built_in">int</span> getNumber()&#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">number</span>;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">public</span> String getName() &#123;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">name</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>UniverStudent.java</code><br><figure class="highlight scala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">UniverStudent</span> <span class="keyword">extends</span> <span class="title">Student5_6</span> </span>&#123;</div><div class="line">	boolean isNarriage;<span class="comment">//子类新增的结婚属性</span></div><div class="line">	<span class="type">UniverStudent</span>(int number, <span class="type">String</span> name, boolean v)&#123;</div><div class="line">		<span class="keyword">super</span>(number, name);<span class="comment">//调用父类的构造方法</span></div><div class="line">	&#125;</div><div class="line">	public boolean getIsNarriage()&#123;</div><div class="line">		<span class="keyword">return</span> isNarriage;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>Example5_6.java</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example5_6</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		UniverStudent zhangStudent= <span class="keyword">new</span> UniverStudent(<span class="number">20111</span>, <span class="string">"张三"</span>, <span class="literal">false</span>);</div><div class="line">		<span class="keyword">int</span> number= zhangStudent.getNumber();</div><div class="line">		String name= zhangStudent.getName();</div><div class="line">		boolean marriage= zhangStudent.getIsNarriage();</div><div class="line">		System.<span class="keyword">out</span>.println(name+ <span class="string">"的学号是: "</span>+ number);</div><div class="line">		<span class="keyword">if</span>(marriage== <span class="literal">true</span>)&#123;</div><div class="line">			System.<span class="keyword">out</span>.println(name+ <span class="string">"已婚"</span>);</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">else</span> &#123;</div><div class="line">			System.<span class="keyword">out</span>.println(name+ <span class="string">"未婚"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>使用super操作被隐藏的成员变量和方法</code><br>如果在子类中想使用被子类隐藏的成员变量或方法，可以使用关键字super，super.x、super.play()，就是访问和调用被子类隐藏的成员变量x和方法play()<br><code>Sum.java</code><br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Sum</span> </span>&#123;</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="keyword">public</span> <span class="keyword">double</span> f()&#123;</div><div class="line">		<span class="keyword">double</span> <span class="keyword">sum</span>= <span class="number">0</span>;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">1</span>; i&lt;= n;i++)&#123;</div><div class="line">			<span class="keyword">sum</span>= <span class="keyword">sum</span>+ i;</div><div class="line">		&#125;</div><div class="line">		<span class="keyword">return</span> <span class="keyword">sum</span>;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>Average.java</code><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Average</span> <span class="keyword">extends</span> <span class="title">Sum</span> </span>&#123;</div><div class="line">	<span class="keyword">double</span> nm;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">fq</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">double</span> c;</div><div class="line">		<span class="keyword">super</span>.n= (<span class="keyword">int</span>)nm;</div><div class="line">		c= <span class="keyword">super</span>.f();</div><div class="line">		<span class="keyword">return</span> c+ nm;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">g</span><span class="params">()</span></span>&#123;</div><div class="line">		<span class="keyword">double</span> c;</div><div class="line">		c= <span class="keyword">super</span>.f();</div><div class="line">		<span class="keyword">return</span> c- nm;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>Example5_7.java</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example5_7</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		Average average= <span class="keyword">new</span> Average();</div><div class="line">		average.nm= <span class="number">100.5678</span>;</div><div class="line">		<span class="keyword">double</span> result1= average.fq();</div><div class="line">		<span class="keyword">double</span> result2= average.g();</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">"result1= "</span>+ result1);</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">"result2= "</span>+ result2);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;使用super调用父类的构造方法&lt;/code&gt;&lt;br&gt;子类不继承父类的构造方法，因此，子类如果想使用父类的构造方法，必须在子类的构造方法中使用，必须使用关键字super来表示，而且super必须是子类构造方法中的&lt;code&gt;头一条&lt;/code&gt;语句&lt;br&gt;&lt;co
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>方法内部类</title>
    <link href="http://yoursite.com/2017/09/26/%E6%96%B9%E6%B3%95%E5%86%85%E9%83%A8%E7%B1%BB/"/>
    <id>http://yoursite.com/2017/09/26/方法内部类/</id>
    <published>2017-09-26T14:32:02.000Z</published>
    <updated>2017-09-26T14:34:10.012Z</updated>
    
    <content type="html"><![CDATA[<p>方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，即只在该方法内可以使用。<br><code>由于方法内部类不能在外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和 static 修饰符。</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//外部类</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HelloWorld</span> &#123;</div><div class="line">    <span class="keyword">private</span> String name = <span class="string">"爱慕课"</span>;</div><div class="line">    <span class="comment">// 外部类中的show方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123; </div><div class="line">	<span class="comment">// 定义方法内部类</span></div><div class="line">	<span class="keyword">class</span> <span class="title">MInner</span> &#123;</div><div class="line">	    <span class="keyword">int</span> score = <span class="number">83</span>;</div><div class="line">	    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getScore</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		<span class="keyword">return</span> score + <span class="number">10</span>;</div><div class="line">	    &#125;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// 创建方法内部类的对象</span></div><div class="line">	MInner mi= <span class="keyword">new</span> MInner();</div><div class="line">	<span class="comment">// 调用内部类的方法</span></div><div class="line">	<span class="keyword">int</span> newScore= mi.getScore();</div><div class="line">	System.<span class="keyword">out</span>.println(<span class="string">"姓名："</span> + name + <span class="string">"\n加分后的成绩："</span> + newScore);</div><div class="line">    &#125;</div><div class="line">    <span class="comment">// 测试方法内部类</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">	<span class="comment">// 创建外部类的对象</span></div><div class="line">	HelloWorld mo= <span class="keyword">new</span> HelloWorld();</div><div class="line">	<span class="comment">// 调用外部类的方法</span></div><div class="line">	mo.show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;方法内部类就是内部类定义在外部类的方法中，方法内部类只在该方法的内部可见，即只在该方法内可以使用。&lt;br&gt;&lt;code&gt;由于方法内部类不能在外部类的方法以外的地方使用，因此方法内部类不能使用访问控制符和 static 修饰符。&lt;/code&gt;&lt;br&gt;&lt;figure class=
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>成员内部类与静态内部类</title>
    <link href="http://yoursite.com/2017/09/26/%E6%88%90%E5%91%98%E5%86%85%E9%83%A8%E7%B1%BB%E4%B8%8E%E9%9D%99%E6%80%81%E5%86%85%E9%83%A8%E7%B1%BB/"/>
    <id>http://yoursite.com/2017/09/26/成员内部类与静态内部类/</id>
    <published>2017-09-26T14:06:19.000Z</published>
    <updated>2017-09-26T14:14:45.574Z</updated>
    
    <content type="html"><![CDATA[<p><code>内部类中最常见的就是成员内部类，也称为普通内部类</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//外部类HelloWorld</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HelloWorld</span>&#123;</div><div class="line">  <span class="comment">//外部类的私有属性name</span></div><div class="line">  <span class="keyword">private</span> String name = <span class="string">"imooc"</span>;</div><div class="line">  <span class="comment">//外部类的成员属性</span></div><div class="line">  <span class="keyword">int</span> age = <span class="number">20</span>;</div><div class="line">  <span class="comment">//成员内部类Inner</span></div><div class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Inner</span> &#123;</div><div class="line">	  String name = <span class="string">"爱慕课"</span>;</div><div class="line">      <span class="comment">//内部类中的方法</span></div><div class="line">	  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123; </div><div class="line">		  System.<span class="keyword">out</span>.println(<span class="string">"外部类中的name："</span> + HelloWorld.<span class="keyword">this</span>.name);</div><div class="line">		  System.<span class="keyword">out</span>.println(<span class="string">"内部类中的name："</span> + name);</div><div class="line">		  System.<span class="keyword">out</span>.println(<span class="string">"外部类中的age："</span> + age);</div><div class="line">		  &#125;</div><div class="line">	  &#125;</div><div class="line">  <span class="comment">//测试成员内部类</span></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">	  <span class="comment">//创建外部类的对象</span></div><div class="line">	  HelloWorld o = <span class="keyword">new</span> HelloWorld (); </div><div class="line">      <span class="comment">//创建内部类的对象</span></div><div class="line">	  Inner inn =  o.new Inner();</div><div class="line">      <span class="comment">//调用内部类对象的show方法</span></div><div class="line">	  inn.show();</div><div class="line">      <span class="comment">//外部类不能直接使用内部类的成员何方法，如show();</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>静态内部类是static修饰的内部类，这种内部类的特点是:</code><br><code>静态内部类不能直接访问外部类的非静态成员，但可以通过 new 外部类().成员 的方式访问</code><br><code>如果外部类的静态成员与内部类的成员名称相同，可通过“类名.静态成员”访问外部类的静态成员；
如果外部类的静态成员与内部类的成员名称不相同，则可通过“成员名”直接调用外部类的静态成员</code><br><code>创建静态内部类的对象时，不需要外部类的对象，可以直接创建 内部类 对象名= new 内部类();</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//外部类</span></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HelloWorld</span> &#123;</div><div class="line">	<span class="comment">// 外部类中的静态变量score</span></div><div class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> score = <span class="number">84</span>;</div><div class="line">	<span class="comment">// 创建静态内部类</span></div><div class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">SInner</span> &#123;</div><div class="line">    <span class="comment">// 内部类中的变量score</span></div><div class="line">    <span class="keyword">int</span> score = <span class="number">91</span>; </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123;</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">"访问外部类中的score："</span> + HelloWorld.score);</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">"访问内部类中的score："</span> + score);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="comment">// 测试静态内部类</span></div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		<span class="comment">// 直接创建内部类的对象</span></div><div class="line">		SInner si= <span class="keyword">new</span> SInner();</div><div class="line">		<span class="comment">// 调用show方法</span></div><div class="line">		si.show();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;内部类中最常见的就是成员内部类，也称为普通内部类&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div cl
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>内部类</title>
    <link href="http://yoursite.com/2017/09/26/%E5%86%85%E9%83%A8%E7%B1%BB/"/>
    <id>http://yoursite.com/2017/09/26/内部类/</id>
    <published>2017-09-26T13:25:05.000Z</published>
    <updated>2017-09-26T13:26:23.021Z</updated>
    
    <content type="html"><![CDATA[<p><code>内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包中的其他类访问该类</code><br><code>内部类的方法可以直接访问外部类的所有数据，包括私有的数据</code><br><code>内部类所实现的功能使用外部类同样可以实现，只是有时使用内部类更方便</code><br><code>内部类分为：成员内部类、静态内部类、方法内部类、匿名内部类</code></p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">neibulei</span> &#123;</span></div><div class="line">	<span class="comment">//内部类Inner，类Inner在类neibulei的内部</span></div><div class="line">	<span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span>&#123;</span></div><div class="line">		<span class="comment">//内部类的方法</span></div><div class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</div><div class="line">			System.out.println(<span class="string">"Hello World!"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</div><div class="line">		<span class="comment">//创建外部类对象</span></div><div class="line">		neibulei neibulei= <span class="keyword">new</span> neibulei();</div><div class="line">		<span class="comment">//创建内部类对象</span></div><div class="line">		Inner inner= neibulei.<span class="keyword">new</span> Inner();</div><div class="line">		<span class="comment">//调用内部类对象的方法</span></div><div class="line">		inner.show();</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;内部类提供了更好的封装，可以把内部类隐藏在外部类之内，不允许同一个包中的其他类访问该类&lt;/code&gt;&lt;br&gt;&lt;code&gt;内部类的方法可以直接访问外部类的所有数据，包括私有的数据&lt;/code&gt;&lt;br&gt;&lt;code&gt;内部类所实现的功能使用外部类同样可以实现，只是有时使
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>可变参数</title>
    <link href="http://yoursite.com/2017/09/26/%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0/"/>
    <id>http://yoursite.com/2017/09/26/可变参数/</id>
    <published>2017-09-26T00:38:45.000Z</published>
    <updated>2017-09-26T00:43:26.061Z</updated>
    
    <content type="html"><![CDATA[<p><code>x是可变参数的代表，代表若干哥int型参数</code><br><code>x.length是x代表的参数的个数</code><br><code>x[i]是x代表的第i个参数(类似数组)</code></p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example4_11</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		f(<span class="number">1</span>,<span class="number">2</span>);</div><div class="line">		f(<span class="number">-1</span>, <span class="number">-2</span>, <span class="number">-3</span>, <span class="number">-4</span>);</div><div class="line">		f(<span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span>(<span class="params"><span class="keyword">int</span> ... x</span>)</span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt; x.length; i++)&#123;</div><div class="line">			System.<span class="keyword">out</span>.println(x[i]);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>上面的方法输出的是一个数字一行，觉得不好看，改版如下<br><code>print输出不换行，println输出换行</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example4_11</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		f(<span class="number">1</span>,<span class="number">2</span>);</div><div class="line">		f(<span class="number">-1</span>, <span class="number">-2</span>, <span class="number">-3</span>, <span class="number">-4</span>);</div><div class="line">		f(<span class="number">9</span>, <span class="number">7</span>, <span class="number">6</span>);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">f</span>(<span class="params"><span class="keyword">int</span> ... x</span>)</span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt; x.length<span class="number">-1</span>; i++)&#123;</div><div class="line">			System.<span class="keyword">out</span>.print(x[i]);</div><div class="line">		&#125;</div><div class="line">		System.<span class="keyword">out</span>.println(x[x.length<span class="number">-1</span>]);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;x是可变参数的代表，代表若干哥int型参数&lt;/code&gt;&lt;br&gt;&lt;code&gt;x.length是x代表的参数的个数&lt;/code&gt;&lt;br&gt;&lt;code&gt;x[i]是x代表的第i个参数(类似数组)&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight c
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>static</title>
    <link href="http://yoursite.com/2017/09/26/static/"/>
    <id>http://yoursite.com/2017/09/26/static/</id>
    <published>2017-09-26T00:23:29.000Z</published>
    <updated>2017-09-26T00:24:34.387Z</updated>
    
    <content type="html"><![CDATA[<p><code>static存在的时候，调用b2.setN(5)，sum=6，去掉static，sum从0开始</code></p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">class</span> <span class="title">B</span>&#123;</div><div class="line">	<span class="keyword">int</span> n;</div><div class="line">	<span class="keyword">static</span> <span class="keyword">int</span> sum= <span class="number">0</span>;  </div><div class="line">	<span class="function"><span class="keyword">void</span> <span class="title">setN</span>(<span class="params"><span class="keyword">int</span> n</span>)</span>&#123;</div><div class="line">		<span class="keyword">this</span>.n= n;</div><div class="line">		System.<span class="keyword">out</span>.println(<span class="string">"this.n= "</span>+ <span class="keyword">this</span>.n);</div><div class="line">	&#125;</div><div class="line">	<span class="function"><span class="keyword">int</span> <span class="title">getSum</span>(<span class="params"></span>)</span>&#123;</div><div class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">1</span>;i&lt;= n; i++)&#123;</div><div class="line">			sum= sum+ i;</div><div class="line">		&#125;</div><div class="line">		System.<span class="keyword">out</span>.println(sum);</div><div class="line">		<span class="keyword">return</span> sum;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Example4_9</span> &#123;</div><div class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span>(<span class="params">String[] args</span>) </span>&#123;</div><div class="line">		B b1=<span class="keyword">new</span> B(), b2= <span class="keyword">new</span> B();</div><div class="line">		b1.setN(<span class="number">3</span>);</div><div class="line">		b2.setN(<span class="number">5</span>);</div><div class="line">		<span class="keyword">int</span> a1= b1.getSum();</div><div class="line">		<span class="keyword">int</span> a2= b2.getSum();</div><div class="line">		System.<span class="keyword">out</span>.println(a1+ a2);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;static存在的时候，调用b2.setN(5)，sum=6，去掉static，sum从0开始&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div cla
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>enum问题</title>
    <link href="http://yoursite.com/2017/09/23/enum%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2017/09/23/enum问题/</id>
    <published>2017-09-23T06:34:53.000Z</published>
    <updated>2017-09-23T06:44:21.248Z</updated>
    
    <content type="html"><![CDATA[<p><code>今天有个想法，是输出每个月的天数，正好最近学了enum，就想用这个来做。
说干就干，啪啪啪啪...咦~有个错误，我改我改我改！
然而改了多次，还是没成功，最后根据错误提示问了下度娘，说是格式有误。
我就想，是不是不能重复内容，我改我改，改到enum里面的内容只有两位31，30，还真是！
但还是有相同的错误，又想了想，前面加上月份呢？ 啪！问题解决</code><br><figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Tian</span>&#123;</span></div><div class="line">	一月<span class="number">31</span>天, 二月<span class="number">28</span>天, 三月<span class="number">31</span>天, 四月<span class="number">30</span>天, 五月<span class="number">31</span>天, 六月<span class="number">30</span>天, </div><div class="line">	七月<span class="number">31</span>天, 八月<span class="number">31</span>天, 九月<span class="number">30</span>天, 十月<span class="number">31</span>天, 十一月<span class="number">30</span>天, 十二月<span class="number">31</span>天</div><div class="line">&#125;</div><div class="line"></div><div class="line">public <span class="class"><span class="keyword">class</span> <span class="title">Java</span> &#123;</span></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		<span class="keyword">for</span>(Tian <span class="symbol">a:</span> Tian.values())&#123;</div><div class="line">			System.<span class="keyword">out</span>.println(a);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><code>总结: enum中的内容不能重复，enum中的内容不能只是数字,不然会出现</code>Syntax error on token(s), misplaced constructs(s)<code>这个错误</code></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;今天有个想法，是输出每个月的天数，正好最近学了enum，就想用这个来做。
说干就干，啪啪啪啪...咦~有个错误，我改我改我改！
然而改了多次，还是没成功，最后根据错误提示问了下度娘，说是格式有误。
我就想，是不是不能重复内容，我改我改，改到enum里面的内容只有
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>eclipse快捷键</title>
    <link href="http://yoursite.com/2017/09/23/eclipse%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://yoursite.com/2017/09/23/eclipse快捷键/</id>
    <published>2017-09-23T05:55:03.000Z</published>
    <updated>2017-09-23T06:34:16.472Z</updated>
    
    <content type="html"><![CDATA[<p><code>eclipse常用快捷键</code></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Syso+alt+/            快速输出代码</div><div class="line">Ctrl+<span class="built_in">shift</span>+f          快速调整代码格式</div><div class="line">Ctrl+D                快速删除光标所在的行</div><div class="line"><span class="built_in">shift</span>+回车            当输入代码较长的时候换行</div><div class="line">ctrl+F11              运行</div><div class="line">Alt+上下箭头           快速移动光标所在的行代码</div><div class="line">Ctrl+alt+上下箭头      快速复制光标所在行代码</div><div class="line">Alt+/                 快速补全代码</div><div class="line">Ctrl+/                快速添加单行注释</div><div class="line">Ctrl+<span class="built_in">shift</span>+/          添加多行注释</div></pre></td></tr></table></figure>
<p><code>小常识</code></p>
<p>打开eclipse，在上方的菜单栏中找到Window<br><img src="https://github.com/sunstady/hexo/blob/master/images/eclipse/101.jpg?raw=true" alt="Window"><br>选中Preferences，点击Java–&gt;Editor–&gt;Content<br><img src="https://github.com/sunstady/hexo/blob/master/images/eclipse/102.jpg?raw=true" alt="Preferences"><br>在红框中输入下面一行字符串，点击OK，退出。<br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="title">.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ</span></div></pre></td></tr></table></figure></p>
<p><code>输入这一串，敲代码的时候可以智能提示</code></p>
<p><code>包的命名规则</code><br><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">*<span class="strong">*.*</span><span class="strong">*(对应项目的名字).*</span><span class="strong">*（项目功能）</span></div><div class="line"><span class="strong">com 公司 </span></div><div class="line"><span class="strong">org 组织</span></div><div class="line"><span class="strong">model 模型</span></div><div class="line"><span class="strong">util 工具</span></div><div class="line"><span class="strong">edu 教育</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;eclipse常用快捷键&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line
    
    </summary>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
</feed>
